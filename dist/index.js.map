{"version":3,"file":"index.js","sources":["../src/core/resolutions/calculateEvaluator.ts","../src/core/resolutions/BooleanResolution.ts","../src/core/resolutions/calculateNumber.ts","../src/core/resolutions/TypedArrayResolution.ts","../src/core/resolutions/calculate.ts","../src/core/convertor/Convertor.ts","../src/core/resolutions/StringResolution.ts","../src/core/scripts/Script.ts"],"sourcesContent":["import * as math from \"mathjs\";\nimport { Context } from \"../context/Context\";\nimport { Expression, Formula } from \"./Formula\";\n\n\nexport function calculateEvaluator<T>(evaluator: math.EvalFunction, context: Context | undefined, formula: Formula | Expression, defaultValue: T): T {\n    const scope = context?.parameters[context.parameters.length - 1];\n    try {\n        return evaluator.evaluate(scope ?? {}) ?? defaultValue;\n    } catch (e) {\n        console.error(\"Error: \" + e + \" on formula: \" + formula + \", scope: \", scope);\n    }\n    return defaultValue;\n}\n\nexport function getFormulaEvaluator(value: Formula | Expression): math.EvalFunction {\n    const formula = typeof(value) === \"string\" ? value : value.formula;\n    if (formula.charAt(0) !== \"{\" || formula.charAt(formula.length-1) !== \"}\") {\n        throw new Error(`Formula: ${value} must start and end with brackets.`);\n    }\n    const mathEvaluator = math.parse(formula.substring(1, formula.length - 1)).compile();\n    return mathEvaluator;\n}\n\n","import { Expression, Formula } from \"./Formula\";\nimport { ValueOf } from \"../types/ValueOf\";\nimport { Context } from \"../context/Context\";\nimport { calculateEvaluator, getFormulaEvaluator } from \"./calculateEvaluator\";\nimport { NumberResolution } from \"./NumberResolution\";\n\nexport type BooleanResolution = boolean | Formula | Expression | undefined;\n\nexport function calculateBoolean(value: BooleanResolution | NumberResolution, defaultValue = false): ValueOf<boolean> {\n    if (typeof(value) === \"boolean\" || typeof(value) === \"number\") {\n        return !!value;\n    }\n    if (value === undefined) {\n        return {\n            valueOf() {\n                return defaultValue;\n            }\n        };\n    }\n    const evaluator = getFormulaEvaluator(value);\n    return {\n        valueOf(context?: Context): boolean {\n            return !!calculateEvaluator<boolean | number>(evaluator, context, value, defaultValue);\n        }\n    };\n}\n","import { ValueOf } from \"../types/ValueOf\";\nimport { Context } from \"../context/Context\";\nimport { calculateEvaluator, getFormulaEvaluator } from \"./calculateEvaluator\";\nimport { NumberResolution } from \"./NumberResolution\";\n\n\nexport function calculateNumber(value: NumberResolution, defaultValue = 0): ValueOf<number> {\n    if (typeof (value) === \"number\") {\n        return value;\n    }\n    if (value === undefined) {\n        return {\n            valueOf() {\n                return defaultValue;\n            }\n        };\n    }\n    const evaluator = getFormulaEvaluator(value);\n    return {\n        valueOf(context?: Context): number {\n            return calculateEvaluator<number>(evaluator, context, value, defaultValue);\n        }\n    };\n}\n","import { Context } from \"../context/Context\";\nimport { TypedArray } from \"../types/TypedArray\";\nimport { ValueOf } from \"../types/ValueOf\";\nimport { Expression, Formula } from \"./Formula\";\nimport { NumberResolution } from \"./NumberResolution\";\nimport { calculateNumber } from \"./calculateNumber\";\nimport { calculateEvaluator, getFormulaEvaluator } from \"./calculateEvaluator\";\n\nexport type TypedArrayResolution = TypedArray | NumberResolution[] | Formula | Expression;\n\ninterface TypedArrayConstructor {\n    new (size: number): TypedArray;\n    BYTES_PER_ELEMENT: number;\n}\n\nexport function calculateTypedArray(value: TypedArrayResolution, ArrayConstructor: TypedArrayConstructor = Float32Array, defaultNumberValue = 0): ValueOf<TypedArray> {\n    if (value instanceof Float32Array || value instanceof Int8Array || value instanceof Uint8Array\n        || value instanceof Int16Array || value instanceof Uint16Array\n        || value instanceof Int32Array || value instanceof Uint32Array) {\n        return value;\n    }\n    if (Array.isArray(value)) {\n        const array = new ArrayConstructor(value.length);\n        const compiledArray = value.map(value => calculateNumber(value, defaultNumberValue));\n        return {\n            valueOf(context?: Context): TypedArray {\n                for (let i = 0; i < compiledArray.length; i++) {\n                    array[i] = compiledArray[i].valueOf(context);\n                }\n                return array;\n            }\n        };    \n    }\n    const formula = value;\n    const evaluator = getFormulaEvaluator(formula);\n    let bufferArray: TypedArray;\n    return {\n        valueOf(context?: Context): TypedArray {\n            const value = calculateEvaluator<TypedArray | undefined>(evaluator, context, formula, undefined);\n            if (value instanceof Float32Array || value instanceof Int8Array || value instanceof Uint8Array\n                || value instanceof Int16Array || value instanceof Uint16Array\n                || value instanceof Int32Array || value instanceof Uint32Array) {\n                return value;\n            }\n            if (typeof(value) === \"number\") {\n                if (!bufferArray) {\n                    bufferArray = new ArrayConstructor(value / ArrayConstructor.BYTES_PER_ELEMENT);\n                }\n                return bufferArray;\n            }\n            throw new Error(`Formula ${formula} doesnt't evaluate to a TypedArray.`);\n        }\n    };\n}","import { Context } from \"../context/Context\";\nimport { TypedArray } from \"../types/TypedArray\";\nimport { ValueOf } from \"../types/ValueOf\";\nimport { Resolution } from \"./Resolution\";\nimport { calculateTypedArray } from \"./TypedArrayResolution\";\nimport { calculateEvaluator, getFormulaEvaluator } from \"./calculateEvaluator\";\n\nexport function calculateResolution(value: Resolution): ValueOf<SupportedTypes | undefined> {\n    if (value === undefined) {\n        return {\n            valueOf() {\n                return undefined;\n            }\n        };\n    }\n    if (value instanceof Float32Array || value instanceof Int8Array || value instanceof Uint8Array\n        || value instanceof Int16Array || value instanceof Uint16Array\n        || value instanceof Int32Array || value instanceof Uint32Array) {\n        return value;\n    }\n    if (typeof(value) === \"number\") {\n        return value;\n    }\n    if (Array.isArray(value)) {\n        return calculateTypedArray(value);\n    }\n    if (typeof(value) === \"string\" && (value.charAt(0) !== \"{\" || value.charAt(value.length-1) !== \"}\")) {\n        return value;\n    }\n    const evaluator = getFormulaEvaluator(value);\n    return {\n        valueOf(context?: Context): string | number | undefined {\n            return calculateEvaluator<string | number | undefined>(evaluator, context, value, undefined);\n        }\n    };\n}\n\n\nexport type SupportedTypes = string | number | TypedArray;\n","import { DokAction } from \"../actions/Action\";\nimport { ScriptAction } from \"../actions/ScriptAction\";\nimport { Context } from \"../context/Context\";\nimport { ExecutionStep } from \"../execution/ExecutionStep\";\nimport { calculateBoolean } from \"../resolutions/BooleanResolution\";\nimport { calculateNumber } from \"../resolutions/calculateNumber\";\nimport { Resolution } from \"../resolutions/Resolution\";\nimport { SupportedTypes, calculateResolution } from \"../resolutions/calculate\";\nimport { Script } from \"../scripts/Script\";\nimport { ValueOf } from \"../types/ValueOf\";\n\nexport type Convertor = (action: DokAction, getSteps: (name: string) => ExecutionStep[], external?: Record<string, any>) => ExecutionStep | undefined;\n\nexport const DEFAULT_EXTERNALS = {\n    log: console.log,\n};\n\nfunction convertScriptAction(action: ScriptAction, getSteps: (name: string) => ExecutionStep[]): ExecutionStep {\n    const steps = getSteps(action.script);\n    const elseSteps = action.else ? getSteps(action.else) : undefined;\n    const resolutions: Record<string, Resolution> = (action.parameters ?? {});\n    const entries: [string, ValueOf<SupportedTypes | undefined>][] = Object.entries(resolutions).map(([key, resolution]) => [key, calculateResolution(resolution)]);\n    const loopResolution = action.loop ? calculateNumber(action.loop) : 1;\n    const conditionResolution = action.condition ? calculateBoolean(action.condition) : true;\n    return (context, parameters) => {\n        const paramValues: Record<string, SupportedTypes | undefined> = context.objectPool?.pop() ?? {};\n        context.parameters.push(paramValues);\n        for (let k in parameters) {\n            paramValues[k] = parameters[k];\n        }\n        for (let entry of entries) {\n            const key: string = entry[0];\n            paramValues[key] = entry[1].valueOf(context);\n        }\n\n        const numLoops = loopResolution.valueOf(context);\n        for (let index = 0; index < numLoops; index++) {\n            paramValues.index = index;\n            if (conditionResolution.valueOf(context)) {\n                for (let step of steps) {\n                    step(context, paramValues);\n                }        \n            } else if (elseSteps) {\n                for (let step of elseSteps) {\n                    step(context, paramValues);\n                }\n            }\n        }\n        const obj = context.parameters.pop();\n        if (obj) {\n            for (let k in obj) {\n                delete obj[k];\n            }\n            context.objectPool?.push(obj);\n        }\n    };\n}\n\nexport const convertAction: Convertor = (\n        action,\n        getSteps,\n        external = DEFAULT_EXTERNALS) => {\n    if (typeof(action.action) === \"string\" || !action.action) {\n        switch(action.action) {\n            case \"log\":\n                {\n                    const messages: Resolution[] = action.messages;\n                    const resolutions = messages.map(m => calculateResolution(m));\n                    return (context) => {\n                        external.log.apply(null, resolutions.map(r => r.valueOf(context)));\n                    }    \n                }\n            case undefined:\n            case \"execute-script\":\n                {\n                    return convertScriptAction(action as ScriptAction, getSteps);\n                }\n        }    \n    } else {\n        const dokAction: DokAction = action.action;\n        const elseAction: DokAction = action.else;\n        const step = convertAction(dokAction, getSteps, external);\n        const elseStep = action.else ? convertAction(elseAction, getSteps, external) : undefined;\n        const loopResolution = action.loop ? calculateNumber(action.loop) : 1;\n        const conditionResolution = action.condition ? calculateBoolean(action.condition) : true;\n        return (context, parameters) => {\n            const numLoops = loopResolution.valueOf(context);\n            for (let i = 0; i < numLoops; i++) {\n                parameters.index = i;\n                if (conditionResolution.valueOf(context)) {\n                    step?.(context, parameters);\n                } else {\n                    elseStep?.(context, parameters);\n                }\n            }\n        }\n    }\n    return;\n}\n\nexport const DEFAULT_CONVERTORS = {\n    \"log\": convertAction,\n    \"execute-script\": convertAction,\n    \"actionAction\": convertAction,\n};\n\nexport function convertScripts(\n    scripts: Script[],\n    convertors: Record<string, Convertor> = DEFAULT_CONVERTORS,\n    external: Record<string, any> = DEFAULT_EXTERNALS): Record<string, ExecutionStep[]> {\n    const scriptMap: Record<string, ExecutionStep[]> = {};\n    const getSteps = (name: string) => scriptMap[name];\n    scripts.forEach(script => {\n        if (!scriptMap[script.name]) {\n            scriptMap[script.name] = [];\n        }\n        const scriptSteps = scriptMap[script.name];\n        script.actions.forEach(action => {\n            const convertAction = typeof(action.action) === \"string\" ? convertors[action.action ?? \"execute-script\"] : convertors.actionAction;\n            const step = convertAction(action, getSteps, external);\n            if (step) {\n                scriptSteps.push(step);\n            }\n        });\n    });\n    return scriptMap;\n}\n\nexport function executeScript(\n        scriptName: string,\n        scripts: Script[],\n        context: Context,\n        convertors: Record<string, Convertor> = DEFAULT_CONVERTORS,\n        external: Record<string, any> = DEFAULT_EXTERNALS): void {\n    const scriptMap = convertScripts(scripts, convertors, external);\n    const scriptExecutionStep = convertScriptAction({\n        script: scriptName,\n    }, (name) => scriptMap[name]);\n    scriptExecutionStep(context, {});\n}\n","import { Context } from \"../context/Context\";\nimport { ValueOf } from \"../types/ValueOf\";\nimport { Expression, Formula } from \"./Formula\";\nimport { calculateEvaluator, getFormulaEvaluator } from \"./calculateEvaluator\";\n\nexport type StringResolution = string | Formula | Expression | undefined;\n\nexport function calculateString(value: StringResolution, defaultValue = \"\"): ValueOf<string> {\n    if (typeof(value) === \"string\" && (value.charAt(0) !== \"{\" || value.charAt(value.length-1) !== \"}\")) {\n        return value;\n    }\n    if (value === undefined) {\n        return {\n            valueOf() {\n                return defaultValue;\n            }\n        };\n    }\n    const evaluator = getFormulaEvaluator(value);\n    return {\n        valueOf(context?: Context): string {\n            return calculateEvaluator<string>(evaluator, context, value, defaultValue);\n        }\n    };\n\n}\n","import { DokAction } from \"../actions/Action\";\nimport { Resolution } from \"../resolutions/Resolution\";\n\nexport type Tag = string|[string, string|number|boolean];\n\nexport interface Script {\n    name: string;\n    parameters?: (string|[string, Resolution])[];\n    actions: DokAction[];\n    tags?: Tag[];\n}\n\nexport function getByTags(scripts: Script[], tags: Tag[]): Script[] {\n    return scripts.filter(script => {\n        return tags.every(tag => {\n            if (typeof(tag) === \"string\") {\n                return script.tags?.some((t) => t === tag || (Array.isArray(t) && t[0] === tag))\n            } else {\n                return script.tags?.some((t) => \n                    Array.isArray(t) && t[0] === tag[0] && t[1] === tag[1]\n                );\n            }\n        });\n    });\n}\n\nexport function getByName(scripts: Script[], name: string | string[]): Script[] {\n    return scripts.filter(script => {\n        return name.includes(script.name);\n    });\n}"],"names":["calculateEvaluator","evaluator","context","formula","defaultValue","scope","parameters","length","_evaluator$evaluate","evaluate","e","console","error","getFormulaEvaluator","value","charAt","Error","mathEvaluator","math","substring","compile","calculateBoolean","undefined","valueOf","calculateNumber","calculateTypedArray","ArrayConstructor","defaultNumberValue","Float32Array","Int8Array","Uint8Array","Int16Array","Uint16Array","Int32Array","Uint32Array","Array","isArray","array","compiledArray","map","i","bufferArray","BYTES_PER_ELEMENT","calculateResolution","DEFAULT_EXTERNALS","log","convertScriptAction","action","getSteps","steps","script","elseSteps","resolutions","_action$parameters","entries","Object","_ref","key","resolution","loopResolution","loop","conditionResolution","condition","paramValues","_context$objectPool$p","_context$objectPool","objectPool","pop","push","k","_iterator","_createForOfIteratorHelperLoose","_step","done","entry","numLoops","index","_iterator2","_step2","step","_iterator3","_step3","obj","_context$objectPool2","convertAction","external","messages","m","apply","r","dokAction","elseAction","elseStep","DEFAULT_CONVERTORS","convertScripts","scripts","convertors","scriptMap","name","forEach","scriptSteps","actions","_action$action","actionAction","executeScript","scriptName","scriptExecutionStep","calculateString","getByTags","tags","filter","every","tag","_script$tags","some","t","_script$tags2","getByName","includes"],"mappings":"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"}