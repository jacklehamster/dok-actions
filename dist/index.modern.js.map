{"version":3,"file":"index.modern.js","sources":["../src/core/convertor/Convertor.ts","../src/core/execution/ExecutionStep.ts","../src/core/convertor/actions-convertor.ts","../src/core/resolutions/calculateEvaluator.ts","../src/core/resolutions/calculateBoolean.ts","../src/core/convertor/condition-convertor.ts","../src/core/resolutions/calculateArray.ts","../src/core/resolutions/calculateNumber.ts","../src/core/resolutions/calculateTypeArray.ts","../src/core/resolutions/calculate.ts","../src/core/convertor/log-convertor.ts","../src/core/convertor/loop-convertor.ts","../src/core/convertor/parameters-convertor.ts","../src/core/convertor/script-convertor.ts","../src/core/convertor/convert-action.ts","../src/core/resolutions/calculateString.ts","../src/core/scripts/Script.ts","../src/core/processor/ScriptProcessor.ts"],"sourcesContent":["import { ExecutionStep } from \"../execution/ExecutionStep\";\nimport { ActionConvertorList } from \"./convert-action\";\n\nexport enum ConvertBehavior {\n    NONE,\n    SKIP_REMAINING,\n}\n\nexport type Convertor<T> = (action: T, results: ExecutionStep[], getSteps: (name?: string) => ExecutionStep[], external?: Record<string, any>, actionConversionMap?: ActionConvertorList) => ConvertBehavior | void;\n\nexport const DEFAULT_EXTERNALS = {\n    log: console.log,\n};\n","import { Context } from \"../context/Context\";\nimport { SupportedTypes } from \"../resolutions/SupportedTypes\";\n\nexport type ExecutionParameters = Record<string, SupportedTypes>;\nexport type ExecutionStep = (context: Context, parameters: ExecutionParameters) => void;\n\nexport function execute(steps: ExecutionStep[], parameters: ExecutionParameters = {}, context: Context = {}) {\n    if (!context.parameters) {\n        context.parameters = [];\n    }\n\n    const changedParameters = context.parameters[context.parameters.length-1] !== parameters;\n    if (changedParameters) {\n        context.parameters.push(parameters);\n    }\n    for (let step of steps) {\n        step(context, parameters);\n    }\n    if (changedParameters) {\n        context.parameters.pop();\n    }\n}\n","import { ActionsAction } from \"../actions/ActionsAction\";\nimport { Convertor } from \"./Convertor\";\nimport { convertAction } from \"./convert-action\";\n\nexport const convertActionsProperty: Convertor<ActionsAction> = (\n        action,\n        results,\n        getSteps,\n        external) => {\n    action.actions?.forEach(action => convertAction(action, results, getSteps, external));\n}\n\n","import * as math from \"mathjs\";\nimport { Context } from \"../context/Context\";\nimport { Expression, Formula } from \"./Formula\";\nimport { Resolution } from \"./Resolution\";\n\nexport function hasFormula(resolution: Resolution): boolean {\n    if (isFormula(resolution)) {\n        return true;\n    }\n    if (Array.isArray(resolution)) {\n        return resolution.some(item => !hasFormula(item));\n    }\n    return false;\n}\n\nexport function isFormula(value: Formula | Expression | any) {\n    if (!value) {\n        return false;\n    }\n    if (typeof(value) !== \"string\" && typeof(value) !== \"object\") {\n        return false;\n    }\n    const formula = typeof(value) === \"string\" ? value : value.formula;\n    return formula?.charAt(0) === \"{\" && formula?.charAt(formula.length-1) === \"}\";\n}\n\nexport function calculateEvaluator<T>(evaluator: math.EvalFunction, context: Context | undefined, formula: Formula | Expression, defaultValue: T): T {\n    const scope = context?.parameters?.[context.parameters.length - 1];\n    try {\n        return evaluator.evaluate(scope ?? {}) ?? defaultValue;\n    } catch (e) {\n        console.error(\"Error: \" + e + \" on formula: \" + formula + \", scope: \", scope);\n    }\n    return defaultValue;\n}\n\nexport function getFormulaEvaluator(value: Formula | Expression): math.EvalFunction {\n    if (!isFormula(value)) {\n        throw new Error(`Formula: ${value} must start and end with brackets.`);\n    }\n    const formula = typeof(value) === \"string\" ? value : value.formula;\n    const mathEvaluator = math.parse(formula.substring(1, formula.length - 1)).compile();\n    return mathEvaluator;\n}\n\n","import { ValueOf } from \"../types/ValueOf\";\nimport { Context } from \"../context/Context\";\nimport { calculateEvaluator, getFormulaEvaluator } from \"./calculateEvaluator\";\nimport { NumberResolution } from \"./NumberResolution\";\nimport { BooleanResolution } from \"./BooleanResolution\";\n\nexport function calculateBoolean(value: BooleanResolution | NumberResolution, defaultValue = false): ValueOf<boolean> {\n    if (typeof(value) === \"boolean\" || typeof(value) === \"number\") {\n        return !!value;\n    }\n    if (value === undefined) {\n        return {\n            valueOf() {\n                return defaultValue;\n            }\n        };\n    }\n    const evaluator = getFormulaEvaluator(value);\n    return {\n        valueOf(context?: Context): boolean {\n            return !!calculateEvaluator<boolean | number>(evaluator, context, value, defaultValue);\n        }\n    };\n}\n","import { ConvertBehavior, Convertor, DEFAULT_EXTERNALS } from \"./Convertor\";\nimport { ExecutionStep, execute } from \"../execution/ExecutionStep\";\nimport { convertAction } from \"./convert-action\";\nimport { DokAction } from \"../actions/Action\";\nimport { calculateBoolean } from \"../resolutions/calculateBoolean\";\n\nexport const convertConditionProperty: Convertor<DokAction> = (\n        action,\n        results,\n        getSteps,\n        external = DEFAULT_EXTERNALS) => {\n    if (action.condition === undefined) {\n        return;\n    }\n    if (!action.condition) {\n        return ConvertBehavior.SKIP_REMAINING;\n    }\n    const { condition, ...subAction } = action;\n    const conditionResolution = calculateBoolean(condition);\n    const subStepResults: ExecutionStep[] = [];\n    convertAction(subAction, subStepResults, getSteps, external);\n    results.push((context, parameters) => {\n        if (conditionResolution.valueOf(context)) {\n            execute(subStepResults, parameters, context);\n        }\n    });\n    return ConvertBehavior.SKIP_REMAINING;\n}\n","import { Context } from \"../context/Context\";\nimport { ValueOf } from \"../types/ValueOf\";\nimport { ArrayResolution } from \"./ArrayResolution\";\nimport { calculateResolution } from \"./calculate\";\nimport { hasFormula } from \"./calculateEvaluator\";\nimport { SupportedTypes } from \"./SupportedTypes\";\n\nexport function calculateArray(value: ArrayResolution): ValueOf<SupportedTypes> {\n    //  check if we have any resolution to perform\n    if (!hasFormula(value)) {\n        if (typeof(value) === \"object\") {\n            throw new Error(\"value can't be an object.\");\n        }\n        return value;\n    }\n    const evaluator = value.map(resolution => calculateResolution(resolution));\n\n    return {\n        valueOf(context?: Context): SupportedTypes {\n            const value = evaluator.map(evalItem => evalItem.valueOf(context));\n            return value;\n        }\n    };\n}","import { ValueOf } from \"../types/ValueOf\";\nimport { Context } from \"../context/Context\";\nimport { calculateEvaluator, getFormulaEvaluator } from \"./calculateEvaluator\";\nimport { NumberResolution } from \"./NumberResolution\";\n\n\nexport function calculateNumber<T extends number = number>(value: NumberResolution<T>, defaultValue:T|0 = 0): ValueOf<T|0>|number {\n    if (typeof(value) === \"number\") {\n        return value;\n    }\n    if (value === undefined) {\n        return {\n            valueOf() {\n                return defaultValue;\n            }\n        };\n    }\n    const evaluator = getFormulaEvaluator(value);\n    return {\n        valueOf(context?: Context): T|0 {\n            return calculateEvaluator<T|0>(evaluator, context, value, defaultValue);\n        }\n    };\n}\n","import { Context } from \"../context/Context\";\nimport { TypedArray } from \"../types/TypedArray\";\nimport { ValueOf } from \"../types/ValueOf\";\nimport { calculateNumber } from \"./calculateNumber\";\nimport { calculateEvaluator, getFormulaEvaluator } from \"./calculateEvaluator\";\nimport { TypedArrayResolution } from \"./TypedArrayResolution\";\n\ninterface TypedArrayConstructor {\n    new (size: number): TypedArray;\n    BYTES_PER_ELEMENT: number;\n}\n\nexport function calculateTypedArray(value: TypedArrayResolution, ArrayConstructor: TypedArrayConstructor = Float32Array, defaultNumberValue = 0): ValueOf<TypedArray> {\n    if (value instanceof Float32Array || value instanceof Int8Array || value instanceof Uint8Array\n        || value instanceof Int16Array || value instanceof Uint16Array\n        || value instanceof Int32Array || value instanceof Uint32Array) {\n        return value;\n    }\n    if (Array.isArray(value)) {\n        const array = new ArrayConstructor(value.length);\n        const compiledArray = value.map(value => calculateNumber(value, defaultNumberValue));\n        return {\n            valueOf(context?: Context): TypedArray {\n                for (let i = 0; i < compiledArray.length; i++) {\n                    array[i] = compiledArray[i].valueOf(context);\n                }\n                return array;\n            }\n        };    \n    }\n    const formula = value;\n    const evaluator = getFormulaEvaluator(formula);\n    let bufferArray: TypedArray;\n    return {\n        valueOf(context?: Context): TypedArray {\n            const value = calculateEvaluator<TypedArray | number[] | undefined>(evaluator, context, formula, undefined);\n            if (value instanceof Float32Array || value instanceof Int8Array || value instanceof Uint8Array\n                || value instanceof Int16Array || value instanceof Uint16Array\n                || value instanceof Int32Array || value instanceof Uint32Array) {\n                return value;\n            }\n            if (Array.isArray(value)) {\n                if (!bufferArray) {\n                    bufferArray = new ArrayConstructor(value.length);\n                }\n                bufferArray.set(value);\n                return bufferArray;\n            }\n        \n            if (typeof(value) === \"number\") {\n                if (!bufferArray) {\n                    bufferArray = new ArrayConstructor(value / ArrayConstructor.BYTES_PER_ELEMENT);\n                }\n                return bufferArray;\n            }\n            throw new Error(`Formula ${formula} doesnt't evaluate to a TypedArray.`);\n        }\n    };\n}","import { Context } from \"../context/Context\";\nimport { ValueOf } from \"../types/ValueOf\";\nimport { ArrayResolution } from \"./ArrayResolution\";\nimport { Resolution } from \"./Resolution\";\nimport { calculateArray } from \"./calculateArray\";\nimport { calculateEvaluator, getFormulaEvaluator, hasFormula } from \"./calculateEvaluator\";\nimport { SupportedTypes } from \"./SupportedTypes\";\nimport { calculateTypedArray } from \"./calculateTypeArray\";\n\nexport function calculateResolution(value: Resolution): ValueOf<SupportedTypes> {\n    if (value === undefined) {\n        return {\n            valueOf() {\n                return undefined;\n            }\n        };\n    }\n    if (value instanceof Float32Array || value instanceof Int8Array || value instanceof Uint8Array\n        || value instanceof Int16Array || value instanceof Uint16Array\n        || value instanceof Int32Array || value instanceof Uint32Array) {\n        return value;\n    }\n    if (typeof(value) === \"number\") {\n        return value;\n    }\n    if (Array.isArray(value)) {\n        if (hasFormula(value)) {\n            return calculateArray(value);\n        }\n        const typeArrayResolution = value as Exclude<typeof value, ArrayResolution>;\n        return calculateTypedArray(typeArrayResolution);\n    }\n    if (typeof(value) === \"string\" && (value.charAt(0) !== \"{\" || value.charAt(value.length-1) !== \"}\")) {\n        return value;\n    }\n    if (Array.isArray(value)) {\n        return calculateArray(value);\n    }\n    const evaluator = getFormulaEvaluator(value);\n    return {\n        valueOf(context?: Context): string | number | undefined {\n            return calculateEvaluator<string | number | undefined>(evaluator, context, value, undefined);\n        }\n    };\n}\n","import { LogAction } from \"../actions/LogAction\";\nimport { Resolution } from \"../resolutions/Resolution\";\nimport { calculateResolution } from \"../resolutions/calculate\";\nimport { Convertor, DEFAULT_EXTERNALS } from \"./Convertor\";\n\nexport const convertLogProperty: Convertor<LogAction> = (\n        action,\n        results,\n        _,\n        external = DEFAULT_EXTERNALS) => {\n    if (action.log === undefined) {\n        return;\n    }\n    const messages: Resolution[] = Array.isArray(action.log) ? action.log : [action.log];\n    const resolutions = messages.map(m => calculateResolution(m));\n    results.push((context)=> external.log(...resolutions.map(r => r.valueOf(context))));\n}\n\n","import { ExecutionStep, execute } from \"../execution/ExecutionStep\";\nimport { ConvertBehavior, Convertor, DEFAULT_EXTERNALS } from \"./Convertor\";\nimport { calculateNumber } from \"../resolutions/calculateNumber\";\nimport { convertAction } from \"./convert-action\";\nimport { LogicAction } from \"../actions/LogicAction\";\n\nexport const convertLoopProperty: Convertor<LogicAction> = (\n        action,\n        stepResults: ExecutionStep[],\n        getSteps,\n        external = DEFAULT_EXTERNALS) => {\n    if (action.loop === undefined) {\n        return;\n    }\n    if (!action.loop) {\n        return ConvertBehavior.SKIP_REMAINING;\n    }\n    const { loop, ...subAction } = action;\n    const loopResolution = calculateNumber(loop, 0);\n    const subStepResults: ExecutionStep[] = [];\n    convertAction(subAction, subStepResults, getSteps, external);\n    stepResults.push((context, parameters) => {\n        const numLoops = loopResolution.valueOf(context);\n        for (let i = 0; i < numLoops; i++) {\n            parameters.index = i;\n            execute(subStepResults, parameters, context);\n        }\n    });\n    return ConvertBehavior.SKIP_REMAINING;\n}\n","import { ConvertBehavior, Convertor, DEFAULT_EXTERNALS } from \"./Convertor\";\nimport { Resolution } from \"../resolutions/Resolution\";\nimport { calculateResolution } from \"../resolutions/calculate\";\nimport { ValueOf } from \"../types/ValueOf\";\nimport { ExecutionParameters, ExecutionStep, execute } from \"../execution/ExecutionStep\";\nimport { convertAction } from \"./convert-action\";\nimport { SupportedTypes } from \"../resolutions/SupportedTypes\";\nimport { ScriptAction } from \"../actions/ScriptAction\";\n\nexport const convertParametersProperty: Convertor<ScriptAction> = (\n        action,\n        results,\n        getSteps,\n        external = DEFAULT_EXTERNALS) => {\n    if (!action.parameters) {\n        return;\n    }\n    const { parameters, ...subAction } = action;\n\n    const paramResolutions: Record<string, Resolution> = (parameters ?? {});\n    const paramEntries: [string, ValueOf<SupportedTypes>][] = Object.entries(paramResolutions)\n        .map(([key, resolution]) => [key, calculateResolution(resolution)]);\n\n    const subStepResults: ExecutionStep[] = [];\n    convertAction(subAction, subStepResults, getSteps, external);\n\n    results.push((context, parameters) => {\n        const paramValues: ExecutionParameters = context.objectPool?.pop() ?? {};\n        for (let k in parameters) {\n            paramValues[k] = parameters[k];\n        }\n        for (let entry of paramEntries) {\n            const key: string = entry[0];\n            paramValues[key] = entry[1].valueOf(context);\n        }\n\n        execute(subStepResults, paramValues, context);\n\n        for (let k in paramValues) {\n            delete paramValues[k];\n        }\n        context.objectPool?.push(paramValues);\n    });\n    return ConvertBehavior.SKIP_REMAINING;\n}","import { ScriptAction } from \"../actions/ScriptAction\";\nimport { execute } from \"../execution/ExecutionStep\";\nimport { Convertor } from \"./Convertor\";\n\nexport const convertScriptProperty: Convertor<ScriptAction> = (\n        action,\n        results,\n        getSteps) => {\n    if (action.script === undefined) {\n        return;\n    }\n    const steps = getSteps(action.script);\n    results.push((context, parameters) => execute(steps, parameters, context));\n}\n\n","import { DokAction } from \"../actions/Action\";\nimport { Context } from \"../context/Context\";\nimport { ExecutionParameters, ExecutionStep, execute } from \"../execution/ExecutionStep\";\nimport { Script } from \"../scripts/Script\";\nimport { ConvertBehavior, Convertor, DEFAULT_EXTERNALS } from \"./Convertor\";\nimport { convertActionsProperty } from \"./actions-convertor\";\nimport { convertConditionProperty } from \"./condition-convertor\";\nimport { convertLogProperty } from \"./log-convertor\";\nimport { convertLoopProperty } from \"./loop-convertor\";\nimport { convertParametersProperty } from \"./parameters-convertor\";\nimport { convertScriptProperty } from \"./script-convertor\";\n\nexport type ActionConvertorList = Convertor<Record<string, any>>[];\n\nexport const DEFAULT_CONVERTORS: ActionConvertorList = [\n    convertParametersProperty,\n    convertLoopProperty,\n    convertConditionProperty,\n    convertLogProperty,\n    convertScriptProperty,\n    convertActionsProperty,\n];\n\nexport const convertAction: Convertor<DokAction> = (\n        action,\n        stepResults: ExecutionStep[],\n        getSteps,\n        external = DEFAULT_EXTERNALS,\n        actionConversionMap = DEFAULT_CONVERTORS): ConvertBehavior | undefined => {\n\n    for (let convertor of actionConversionMap) {\n        if (convertor(action, stepResults, getSteps, external, actionConversionMap) === ConvertBehavior.SKIP_REMAINING) {\n            return;\n        }\n    }\n    return;\n}\n\nexport function convertScripts(\n        scripts: Script[],\n        external: Record<string, any> = DEFAULT_EXTERNALS,\n        actionConversionMap = DEFAULT_CONVERTORS): Map<Script, ExecutionStep[]> {\n    const scriptMap: Map<Script, ExecutionStep[]> = new Map();\n    const getSteps = (name?: string) => {\n        const script = scripts.find(script => script.name === name);\n        return script ? scriptMap.get(script) ?? [] : [];\n    };\n    scripts.forEach(script => {\n        if (!scriptMap.has(script)) {\n            scriptMap.set(script, []);\n        }\n        const scriptSteps = scriptMap.get(script) ?? [];\n        script.actions.forEach(action => {\n            convertAction(action, scriptSteps, getSteps, external, actionConversionMap);\n        });\n    });\n    return scriptMap;\n}\n\nexport function executeScript(\n        scriptName: string,\n        parameters: ExecutionParameters = {},\n        scripts: Script[],\n        external: Record<string, any> = DEFAULT_EXTERNALS,\n        actionConversionMap = DEFAULT_CONVERTORS): () => void {\n    const context: Context = {\n        parameters: [parameters],\n        cleanupActions: []\n    };\n    const scriptMap = convertScripts(scripts, external, actionConversionMap);\n    const script = scripts.find(({name}) => name === scriptName);\n    const steps = script ? scriptMap.get(script) : [];\n    if (steps?.length) {\n        execute(steps, {}, context);\n    }\n    return () => {\n        context.cleanupActions!.forEach(action => action());\n        context.cleanupActions!.length = 0;\n    };\n}\n","import { Context } from \"../context/Context\";\nimport { ValueOf } from \"../types/ValueOf\";\nimport { StringResolution } from \"./StringResolution\";\nimport { calculateEvaluator, getFormulaEvaluator, isFormula } from \"./calculateEvaluator\";\n\nexport function calculateString<T extends string = string>(value: StringResolution<T>, defaultValue: T|\"\" = \"\"): ValueOf<T|\"\">|string {\n    if (typeof(value) === \"string\" && !isFormula(value)) {\n        return value;\n    }\n    if (value === undefined) {\n        return {\n            valueOf() {\n                return defaultValue;\n            }\n        };\n    }\n    const evaluator = getFormulaEvaluator(value);\n    return {\n        valueOf(context?: Context): T|\"\" {\n            return calculateEvaluator<T|\"\">(evaluator, context, value, defaultValue);\n        }\n    };\n\n}\n","import { DokAction } from \"../actions/Action\";\nimport { Resolution } from \"../resolutions/Resolution\";\n\nexport type Tag = string|[string, string|number|boolean];\n\nexport interface Script {\n    name?: string;\n    parameters?: (string|[string, Resolution])[];\n    actions: (DokAction|Record<string, any>)[];\n    tags?: Tag[];\n}\n\nexport interface ScriptFilter {\n    name?: string | string[];\n    tags?: Tag[];\n}\n\nexport function filterScripts(scripts: Script[], filter: ScriptFilter): Script[] {\n    return scripts.filter(({name, tags}) => {\n        if (name) {\n            const namesToFilter = !filter.name ? undefined : Array.isArray(filter.name) ? filter.name : [filter.name];\n            if (namesToFilter?.length && namesToFilter.indexOf(name) < 0) {\n                return false;\n            }    \n        }\n        if (filter.tags && !filter.tags?.every(tag => {\n            if (typeof(tag) === \"string\") {\n                return tags?.some((t) => t === tag || (Array.isArray(t) && t[0] === tag))\n            } else {\n                return tags?.some((t) => Array.isArray(t) && t[0] === tag[0] && t[1] === tag[1]);\n            }\n        })) {\n            return false;\n        }\n        return true;\n    });\n}\n","import { Context } from \"../context/Context\";\nimport { DEFAULT_EXTERNALS } from \"../convertor/Convertor\";\nimport { ActionConvertorList, DEFAULT_CONVERTORS, convertScripts } from \"../convertor/convert-action\";\nimport { ExecutionParameters, ExecutionStep, execute } from \"../execution/ExecutionStep\";\nimport { Script, ScriptFilter, Tag, filterScripts } from \"../scripts/Script\";\n\nexport interface LoopBehavior {\n    cleanupAfterLoop?: boolean;\n}\n\nexport class ScriptProcessor {\n    scripts: Script[];\n    scriptMap: Map<Script, ExecutionStep[]>;\n    external: Record<string, any>;\n\n    constructor(scripts: Script[], external: Record<string, any> = DEFAULT_EXTERNALS, actionConversionMap: ActionConvertorList = DEFAULT_CONVERTORS) {\n        this.scripts = scripts;\n        this.scriptMap = convertScripts(this.scripts, external, actionConversionMap);\n        this.external = external;\n    }\n\n    private createContext(): Context {\n        return {\n            parameters: [],\n            cleanupActions: [],\n            objectPool: [],\n        };\n    }\n\n    private createLoopCleanup(behavior: LoopBehavior, context: Context) {\n        const cleanupActions = context.cleanupActions;\n        return behavior.cleanupAfterLoop && cleanupActions ? () => {\n            for (let action of cleanupActions) {\n                action();\n            }\n            cleanupActions.length = 0;\n        } : () => {};\n    }\n\n    private getSteps(filter: ScriptFilter) {\n        const scripts = filterScripts(this.scripts, filter);\n        const steps: ExecutionStep[] = [];\n        scripts.forEach(script => this.scriptMap.get(script)?.forEach(step => steps.push(step)));\n        return steps;\n    }\n\n    runByName(name: string): () => void {\n        const context: Context = this.createContext();\n        execute(this.getSteps({ name }), undefined, context);\n        return () => context.cleanupActions?.forEach(action => action());\n    }\n\n    runByTags(tags: Tag[]): () => void {\n        const context: Context = this.createContext();\n        execute(this.getSteps({ tags }), undefined, context);\n        return () => context.cleanupActions?.forEach(action => action());\n    }\n\n    private loopWithFilter(filter: ScriptFilter, behavior: LoopBehavior = {}): () => void {\n        const context: Context = this.createContext();\n        const parameters: ExecutionParameters = { time: 0 };\n        const steps = this.getSteps(filter);\n        const loopCleanup = this.createLoopCleanup(behavior, context);\n        const loop = (time: number) => {\n            parameters.time = time;\n            execute(steps, parameters, context);\n            loopCleanup();\n            animationFrameId = requestAnimationFrame(loop);\n        };\n        let animationFrameId = requestAnimationFrame(loop);\n        return () => {\n            loopCleanup();\n            cancelAnimationFrame(animationFrameId);\n        }\n    }\n    \n    loopByName(name: string, behavior: LoopBehavior = {}): () => void {\n        return this.loopWithFilter({ name }, behavior);\n    }\n\n    loopByTags(tags: string[], behavior: LoopBehavior = {}) {\n        return this.loopWithFilter({ tags }, behavior);\n    }\n}"],"names":["ConvertBehavior","DEFAULT_EXTERNALS","log","console","execute","steps","parameters","context","changedParameters","length","push","_iterator","_createForOfIteratorHelperLoose","_step","done","step","value","pop","convertActionsProperty","action","results","getSteps","external","_action$actions","actions","forEach","convertAction","hasFormula","resolution","isFormula","Array","isArray","some","item","formula","charAt","calculateEvaluator","evaluator","defaultValue","scope","_context$parameters","_evaluator$evaluate","evaluate","e","error","getFormulaEvaluator","Error","mathEvaluator","math","substring","compile","calculateBoolean","undefined","valueOf","convertConditionProperty","condition","SKIP_REMAINING","subAction","_objectWithoutPropertiesLoose","_excluded","conditionResolution","subStepResults","calculateArray","map","calculateResolution","evalItem","calculateNumber","calculateTypedArray","ArrayConstructor","defaultNumberValue","Float32Array","Int8Array","Uint8Array","Int16Array","Uint16Array","Int32Array","Uint32Array","array","compiledArray","i","bufferArray","set","BYTES_PER_ELEMENT","typeArrayResolution","convertLogProperty","_","messages","resolutions","m","_external","apply","r","convertLoopProperty","stepResults","loop","loopResolution","numLoops","index","convertParametersProperty","paramResolutions","paramEntries","Object","entries","_ref","key","paramValues","_context$objectPool$p","_context$objectPool","objectPool","k","entry","_context$objectPool2","convertScriptProperty","script","DEFAULT_CONVERTORS","actionConversionMap","convertor","convertScripts","scripts","scriptMap","Map","name","find","_scriptMap$get","get","has","scriptSteps","_scriptMap$get2","executeScript","scriptName","cleanupActions","calculateString","filterScripts","filter","tags","namesToFilter","indexOf","_filter$tags","every","tag","t","ScriptProcessor","_proto","prototype","createContext","createLoopCleanup","behavior","cleanupAfterLoop","_this$scriptMap$get","_this","runByName","_context$cleanupActio","runByTags","_context$cleanupActio2","loopWithFilter","time","loopCleanup","animationFrameId","requestAnimationFrame","cancelAnimationFrame","loopByName","loopByTags"],"mappings":"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"}