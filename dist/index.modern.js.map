{"version":3,"file":"index.modern.js","sources":["../src/core/convertor/Convertor.ts","../src/core/execution/ExecutionStep.ts","../src/core/resolutions/calculateEvaluator.ts","../src/core/resolutions/calculateArray.ts","../src/core/resolutions/calculateNumber.ts","../src/core/resolutions/calculateTypeArray.ts","../src/core/resolutions/calculate.ts","../src/core/resolutions/calculateString.ts","../src/core/resolutions/calculateBoolean.ts","../src/core/scripts/Script.ts","../src/core/convertor/actions-convertor.ts","../src/core/convertor/condition-convertor.ts","../src/core/convertor/log-convertor.ts","../src/core/convertor/loop-convertor.ts","../src/core/convertor/parameters-convertor.ts","../src/core/convertor/script-convertor.ts","../src/core/convertor/convert-action.ts","../src/core/processor/ScriptProcessor.ts"],"sourcesContent":["import { ExecutionStep } from \"../execution/ExecutionStep\";\nimport { ActionConvertorList } from \"./convert-action\";\n\nexport enum ConvertBehavior {\n    NONE,\n    SKIP_REMAINING,\n}\n\nexport type Convertor<T> = (action: T, results: ExecutionStep[], getSteps: (name?: string) => ExecutionStep[], external?: Record<string, any>, actionConversionMap?: ActionConvertorList) => ConvertBehavior | void;\n\nexport const DEFAULT_EXTERNALS = {\n    log: console.log,\n};\n","import { Context } from \"../context/Context\";\nimport { SupportedTypes } from \"../resolutions/SupportedTypes\";\n\nexport type ExecutionParameters = Record<string, SupportedTypes>;\nexport type ExecutionStep = (context: Context, parameters: ExecutionParameters) => void;\n\nexport function execute(steps: ExecutionStep[], parameters: ExecutionParameters = {}, context: Context = {}) {\n    if (!context.parameters) {\n        context.parameters = [];\n    }\n\n    const changedParameters = context.parameters[context.parameters.length-1] !== parameters;\n    if (changedParameters) {\n        context.parameters.push(parameters);\n    }\n    for (let step of steps) {\n        step(context, parameters);\n    }\n    if (changedParameters) {\n        context.parameters.pop();\n    }\n}\n","import * as math from \"mathjs\";\nimport { Context } from \"../context/Context\";\nimport { Expression, Formula } from \"./Formula\";\nimport { Resolution } from \"./Resolution\";\n\nexport function hasFormula(resolution: Resolution): boolean {\n    if (isFormula(resolution)) {\n        return true;\n    }\n    if (Array.isArray(resolution)) {\n        return resolution.some(item => !hasFormula(item));\n    }\n    return false;\n}\n\nexport function isFormula(value: Formula | Expression | any) {\n    if (!value) {\n        return false;\n    }\n    if (typeof(value) !== \"string\" && typeof(value) !== \"object\") {\n        return false;\n    }\n    const formula = typeof(value) === \"string\" ? value : value.formula;\n    return formula?.charAt(0) === \"{\" && formula?.charAt(formula.length-1) === \"}\";\n}\n\nexport function calculateEvaluator<T>(evaluator: math.EvalFunction, context: Context | undefined, formula: Formula | Expression, defaultValue: T): T {\n    const scope = context?.parameters?.[context.parameters.length - 1];\n    try {\n        return evaluator.evaluate(scope ?? {}) ?? defaultValue;\n    } catch (e) {\n        console.error(\"Error: \" + e + \" on formula: \" + formula + \", scope: \", scope);\n    }\n    return defaultValue;\n}\n\nexport function getFormulaEvaluator(value: Formula | Expression): math.EvalFunction {\n    if (!isFormula(value)) {\n        throw new Error(`Formula: ${value} must start and end with brackets.`);\n    }\n    const formula = typeof(value) === \"string\" ? value : value.formula;\n    const mathEvaluator = math.parse(formula.substring(1, formula.length - 1)).compile();\n    return mathEvaluator;\n}\n\n","import { Context } from \"../context/Context\";\nimport { ValueOf } from \"../types/ValueOf\";\nimport { ArrayResolution } from \"./ArrayResolution\";\nimport { calculateResolution } from \"./calculate\";\nimport { hasFormula } from \"./calculateEvaluator\";\nimport { SupportedTypes } from \"./SupportedTypes\";\n\nexport function calculateArray(value: ArrayResolution): ValueOf<SupportedTypes> {\n    //  check if we have any resolution to perform\n    if (!hasFormula(value)) {\n        if (typeof(value) === \"object\") {\n            throw new Error(\"value can't be an object.\");\n        }\n        return value;\n    }\n    const evaluator = value.map(resolution => calculateResolution(resolution));\n\n    return {\n        valueOf(context?: Context): SupportedTypes {\n            const value = evaluator.map(evalItem => evalItem.valueOf(context));\n            return value;\n        }\n    };\n}","import { ValueOf } from \"../types/ValueOf\";\nimport { Context } from \"../context/Context\";\nimport { calculateEvaluator, getFormulaEvaluator } from \"./calculateEvaluator\";\nimport { NumberResolution } from \"./NumberResolution\";\n\n\nexport function calculateNumber<T extends number = number>(value: NumberResolution<T>, defaultValue:T|0 = 0): ValueOf<T|0>|number {\n    if (typeof(value) === \"number\") {\n        return value;\n    }\n    if (value === undefined) {\n        return {\n            valueOf() {\n                return defaultValue;\n            }\n        };\n    }\n    const evaluator = getFormulaEvaluator(value);\n    return {\n        valueOf(context?: Context): T|0 {\n            return calculateEvaluator<T|0>(evaluator, context, value, defaultValue);\n        }\n    };\n}\n","import { Context } from \"../context/Context\";\nimport { TypedArray } from \"../types/TypedArray\";\nimport { ValueOf } from \"../types/ValueOf\";\nimport { calculateNumber } from \"./calculateNumber\";\nimport { calculateEvaluator, getFormulaEvaluator } from \"./calculateEvaluator\";\nimport { TypedArrayResolution } from \"./TypedArrayResolution\";\n\ninterface TypedArrayConstructor {\n    new (size: number): TypedArray;\n    BYTES_PER_ELEMENT: number;\n}\n\nexport function calculateTypedArray(value: TypedArrayResolution, ArrayConstructor: TypedArrayConstructor = Float32Array, defaultNumberValue = 0): ValueOf<TypedArray> {\n    if (value instanceof Float32Array || value instanceof Int8Array || value instanceof Uint8Array\n        || value instanceof Int16Array || value instanceof Uint16Array\n        || value instanceof Int32Array || value instanceof Uint32Array) {\n        return value;\n    }\n    if (Array.isArray(value)) {\n        const array = new ArrayConstructor(value.length);\n        const compiledArray = value.map(value => calculateNumber(value, defaultNumberValue));\n        return {\n            valueOf(context?: Context): TypedArray {\n                for (let i = 0; i < compiledArray.length; i++) {\n                    array[i] = compiledArray[i].valueOf(context);\n                }\n                return array;\n            }\n        };    \n    }\n    const formula = value;\n    const evaluator = getFormulaEvaluator(formula);\n    let bufferArray: TypedArray;\n    return {\n        valueOf(context?: Context): TypedArray {\n            const value = calculateEvaluator<TypedArray | undefined>(evaluator, context, formula, undefined);\n            if (value instanceof Float32Array || value instanceof Int8Array || value instanceof Uint8Array\n                || value instanceof Int16Array || value instanceof Uint16Array\n                || value instanceof Int32Array || value instanceof Uint32Array) {\n                return value;\n            }\n            if (typeof(value) === \"number\") {\n                if (!bufferArray) {\n                    bufferArray = new ArrayConstructor(value / ArrayConstructor.BYTES_PER_ELEMENT);\n                }\n                return bufferArray;\n            }\n            throw new Error(`Formula ${formula} doesnt't evaluate to a TypedArray.`);\n        }\n    };\n}","import { Context } from \"../context/Context\";\nimport { ValueOf } from \"../types/ValueOf\";\nimport { ArrayResolution } from \"./ArrayResolution\";\nimport { Resolution } from \"./Resolution\";\nimport { calculateArray } from \"./calculateArray\";\nimport { calculateEvaluator, getFormulaEvaluator, hasFormula } from \"./calculateEvaluator\";\nimport { SupportedTypes } from \"./SupportedTypes\";\nimport { calculateTypedArray } from \"./calculateTypeArray\";\n\nexport function calculateResolution(value: Resolution): ValueOf<SupportedTypes> {\n    if (value === undefined) {\n        return {\n            valueOf() {\n                return undefined;\n            }\n        };\n    }\n    if (value instanceof Float32Array || value instanceof Int8Array || value instanceof Uint8Array\n        || value instanceof Int16Array || value instanceof Uint16Array\n        || value instanceof Int32Array || value instanceof Uint32Array) {\n        return value;\n    }\n    if (typeof(value) === \"number\") {\n        return value;\n    }\n    if (Array.isArray(value)) {\n        if (hasFormula(value)) {\n            return calculateArray(value);\n        }\n        const typeArrayResolution = value as Exclude<typeof value, ArrayResolution>;\n        return calculateTypedArray(typeArrayResolution);\n    }\n    if (typeof(value) === \"string\" && (value.charAt(0) !== \"{\" || value.charAt(value.length-1) !== \"}\")) {\n        return value;\n    }\n    if (Array.isArray(value)) {\n        return calculateArray(value);\n    }\n    const evaluator = getFormulaEvaluator(value);\n    return {\n        valueOf(context?: Context): string | number | undefined {\n            return calculateEvaluator<string | number | undefined>(evaluator, context, value, undefined);\n        }\n    };\n}\n","import { Context } from \"../context/Context\";\nimport { ValueOf } from \"../types/ValueOf\";\nimport { StringResolution } from \"./StringResolution\";\nimport { calculateEvaluator, getFormulaEvaluator, isFormula } from \"./calculateEvaluator\";\n\nexport function calculateString<T extends string = string>(value: StringResolution<T>, defaultValue: T|\"\" = \"\"): ValueOf<T|\"\">|string {\n    if (typeof(value) === \"string\" && !isFormula(value)) {\n        return value;\n    }\n    if (value === undefined) {\n        return {\n            valueOf() {\n                return defaultValue;\n            }\n        };\n    }\n    const evaluator = getFormulaEvaluator(value);\n    return {\n        valueOf(context?: Context): T|\"\" {\n            return calculateEvaluator<T|\"\">(evaluator, context, value, defaultValue);\n        }\n    };\n\n}\n","import { ValueOf } from \"../types/ValueOf\";\nimport { Context } from \"../context/Context\";\nimport { calculateEvaluator, getFormulaEvaluator } from \"./calculateEvaluator\";\nimport { NumberResolution } from \"./NumberResolution\";\nimport { BooleanResolution } from \"./BooleanResolution\";\n\nexport function calculateBoolean(value: BooleanResolution | NumberResolution, defaultValue = false): ValueOf<boolean> {\n    if (typeof(value) === \"boolean\" || typeof(value) === \"number\") {\n        return !!value;\n    }\n    if (value === undefined) {\n        return {\n            valueOf() {\n                return defaultValue;\n            }\n        };\n    }\n    const evaluator = getFormulaEvaluator(value);\n    return {\n        valueOf(context?: Context): boolean {\n            return !!calculateEvaluator<boolean | number>(evaluator, context, value, defaultValue);\n        }\n    };\n}\n","import { DokAction } from \"../actions/Action\";\nimport { Resolution } from \"../resolutions/Resolution\";\n\nexport type Tag = string|[string, string|number|boolean];\n\nexport interface Script {\n    name: string;\n    parameters?: (string|[string, Resolution])[];\n    actions: (DokAction|Record<string, any>)[];\n    tags?: Tag[];\n}\n\nexport interface ScriptFilter {\n    name?: string | string[];\n    tags?: Tag[];\n}\n\nexport function filterScripts(scripts: Script[], filter: ScriptFilter): Script[] {\n    return scripts.filter(({name, tags}) => {\n        const namesToFilter = !filter.name ? undefined : Array.isArray(filter.name) ? filter.name : [filter.name];\n        if (namesToFilter?.length && namesToFilter.indexOf(name) < 0) {\n            return false;\n        }\n        if (filter.tags && !filter.tags?.every(tag => {\n            if (typeof(tag) === \"string\") {\n                return tags?.some((t) => t === tag || (Array.isArray(t) && t[0] === tag))\n            } else {\n                return tags?.some((t) => Array.isArray(t) && t[0] === tag[0] && t[1] === tag[1]);\n            }\n        })) {\n            return false;\n        }\n        return true;\n    });\n}\n","import { ActionsAction } from \"../actions/ActionsAction\";\nimport { Convertor } from \"./Convertor\";\nimport { convertAction } from \"./convert-action\";\n\nexport const convertActionsProperty: Convertor<ActionsAction> = (\n        action,\n        results,\n        getSteps,\n        external) => {\n    action.actions?.forEach(action => convertAction(action, results, getSteps, external));\n}\n\n","import { ConvertBehavior, Convertor, DEFAULT_EXTERNALS } from \"./Convertor\";\nimport { ExecutionStep, execute } from \"../execution/ExecutionStep\";\nimport { convertAction } from \"./convert-action\";\nimport { DokAction } from \"../actions/Action\";\nimport { calculateBoolean } from \"../resolutions/calculateBoolean\";\n\nexport const convertConditionProperty: Convertor<DokAction> = (\n        action,\n        results,\n        getSteps,\n        external = DEFAULT_EXTERNALS) => {\n    if (action.condition === undefined) {\n        return;\n    }\n    if (!action.condition) {\n        return ConvertBehavior.SKIP_REMAINING;\n    }\n    const { condition, ...subAction } = action;\n    const conditionResolution = calculateBoolean(condition);\n    const subStepResults: ExecutionStep[] = [];\n    convertAction(subAction, subStepResults, getSteps, external);\n    results.push((context, parameters) => {\n        if (conditionResolution.valueOf(context)) {\n            execute(subStepResults, parameters, context);\n        }\n    });\n    return ConvertBehavior.SKIP_REMAINING;\n}\n","import { LogAction } from \"../actions/LogAction\";\nimport { Resolution } from \"../resolutions/Resolution\";\nimport { calculateResolution } from \"../resolutions/calculate\";\nimport { Convertor, DEFAULT_EXTERNALS } from \"./Convertor\";\n\nexport const convertLogProperty: Convertor<LogAction> = (\n        action,\n        results,\n        _,\n        external = DEFAULT_EXTERNALS) => {\n    if (action.log === undefined) {\n        return;\n    }\n    const messages: Resolution[] = Array.isArray(action.log) ? action.log : [action.log];\n    const resolutions = messages.map(m => calculateResolution(m));\n    results.push((context)=> external.log(...resolutions.map(r => r.valueOf(context))));\n}\n\n","import { ExecutionStep, execute } from \"../execution/ExecutionStep\";\nimport { ConvertBehavior, Convertor, DEFAULT_EXTERNALS } from \"./Convertor\";\nimport { calculateNumber } from \"../resolutions/calculateNumber\";\nimport { convertAction } from \"./convert-action\";\nimport { LogicAction } from \"../actions/LogicAction\";\n\nexport const convertLoopProperty: Convertor<LogicAction> = (\n        action,\n        stepResults: ExecutionStep[],\n        getSteps,\n        external = DEFAULT_EXTERNALS) => {\n    if (action.loop === undefined) {\n        return;\n    }\n    if (!action.loop) {\n        return ConvertBehavior.SKIP_REMAINING;\n    }\n    const { loop, ...subAction } = action;\n    const loopResolution = calculateNumber(loop, 0);\n    const subStepResults: ExecutionStep[] = [];\n    convertAction(subAction, subStepResults, getSteps, external);\n    stepResults.push((context, parameters) => {\n        const numLoops = loopResolution.valueOf(context);\n        for (let i = 0; i < numLoops; i++) {\n            parameters.index = i;\n            execute(subStepResults, parameters, context);\n        }\n    });\n    return ConvertBehavior.SKIP_REMAINING;\n}\n","import { ConvertBehavior, Convertor, DEFAULT_EXTERNALS } from \"./Convertor\";\nimport { Resolution } from \"../resolutions/Resolution\";\nimport { calculateResolution } from \"../resolutions/calculate\";\nimport { ValueOf } from \"../types/ValueOf\";\nimport { ExecutionParameters, ExecutionStep, execute } from \"../execution/ExecutionStep\";\nimport { convertAction } from \"./convert-action\";\nimport { SupportedTypes } from \"../resolutions/SupportedTypes\";\nimport { ScriptAction } from \"../actions/ScriptAction\";\n\nexport const convertParametersProperty: Convertor<ScriptAction> = (\n        action,\n        results,\n        getSteps,\n        external = DEFAULT_EXTERNALS) => {\n    if (!action.parameters) {\n        return;\n    }\n    const { parameters, ...subAction } = action;\n\n    const paramResolutions: Record<string, Resolution> = (parameters ?? {});\n    const paramEntries: [string, ValueOf<SupportedTypes>][] = Object.entries(paramResolutions)\n        .map(([key, resolution]) => [key, calculateResolution(resolution)]);\n\n    const subStepResults: ExecutionStep[] = [];\n    convertAction(subAction, subStepResults, getSteps, external);\n\n    results.push((context, parameters) => {\n        const paramValues: ExecutionParameters = context.objectPool?.pop() ?? {};\n        for (let k in parameters) {\n            paramValues[k] = parameters[k];\n        }\n        for (let entry of paramEntries) {\n            const key: string = entry[0];\n            paramValues[key] = entry[1].valueOf(context);\n        }\n\n        execute(subStepResults, paramValues, context);\n\n        for (let k in paramValues) {\n            delete paramValues[k];\n        }\n        context.objectPool?.push(paramValues);\n    });\n    return ConvertBehavior.SKIP_REMAINING;\n}","import { ScriptAction } from \"../actions/ScriptAction\";\nimport { execute } from \"../execution/ExecutionStep\";\nimport { Convertor } from \"./Convertor\";\n\nexport const convertScriptProperty: Convertor<ScriptAction> = (\n        action,\n        results,\n        getSteps) => {\n    if (action.script === undefined) {\n        return;\n    }\n    const steps = getSteps(action.script);\n    results.push((context, parameters) => execute(steps, parameters, context));\n}\n\n","import { DokAction } from \"../actions/Action\";\nimport { Context } from \"../context/Context\";\nimport { ExecutionParameters, ExecutionStep, execute } from \"../execution/ExecutionStep\";\nimport { Script } from \"../scripts/Script\";\nimport { ConvertBehavior, Convertor, DEFAULT_EXTERNALS } from \"./Convertor\";\nimport { convertActionsProperty } from \"./actions-convertor\";\nimport { convertConditionProperty } from \"./condition-convertor\";\nimport { convertLogProperty } from \"./log-convertor\";\nimport { convertLoopProperty } from \"./loop-convertor\";\nimport { convertParametersProperty } from \"./parameters-convertor\";\nimport { convertScriptProperty } from \"./script-convertor\";\n\nexport type ActionConvertorList = Convertor<Record<string, any>>[];\n\nexport const DEFAULT_CONVERTORS: ActionConvertorList = [\n    convertParametersProperty,\n    convertLoopProperty,\n    convertConditionProperty,\n    convertLogProperty,\n    convertScriptProperty,\n    convertActionsProperty,\n];\n\nexport const convertAction: Convertor<DokAction> = (\n        action,\n        stepResults: ExecutionStep[],\n        getSteps,\n        external = DEFAULT_EXTERNALS,\n        actionConversionMap = DEFAULT_CONVERTORS): ConvertBehavior | undefined => {\n\n    for (let convertor of actionConversionMap) {\n        if (convertor(action, stepResults, getSteps, external, actionConversionMap) === ConvertBehavior.SKIP_REMAINING) {\n            return;\n        }\n    }\n    return;\n}\n\nexport function convertScripts(\n        scripts: Script[],\n        external: Record<string, any> = DEFAULT_EXTERNALS,\n        actionConversionMap = DEFAULT_CONVERTORS): Record<string, ExecutionStep[]> {\n    const scriptMap: Record<string, ExecutionStep[]> = {};\n    const getSteps = (name?: string) => name ? scriptMap[name] : [];\n    scripts.forEach(script => {\n        if (!scriptMap[script.name]) {\n            scriptMap[script.name] = [];\n        }\n        const scriptSteps = scriptMap[script.name];\n        script.actions.forEach(action => {\n            convertAction(action, scriptSteps, getSteps, external, actionConversionMap);\n        });\n    });\n    return scriptMap;\n}\n\nexport function executeScript(\n        scriptName: string,\n        parameters: ExecutionParameters = {},\n        scripts: Script[],\n        external: Record<string, any> = DEFAULT_EXTERNALS,\n        actionConversionMap = DEFAULT_CONVERTORS): () => void {\n    const context: Context = {\n        parameters: [parameters],\n        cleanupActions: []\n    };\n    const scriptMap = convertScripts(scripts, external, actionConversionMap);\n    execute(scriptMap[scriptName], {}, context);\n    return () => {\n        context.cleanupActions!.forEach(action => action());\n        context.cleanupActions!.length = 0;\n    };\n}\n","import { Context } from \"../context/Context\";\nimport { DEFAULT_EXTERNALS } from \"../convertor/Convertor\";\nimport { ActionConvertorList, DEFAULT_CONVERTORS, convertScripts } from \"../convertor/convert-action\";\nimport { ExecutionParameters, ExecutionStep, execute } from \"../execution/ExecutionStep\";\nimport { Script, ScriptFilter, Tag, filterScripts } from \"../scripts/Script\";\n\nexport interface LoopBehavior {\n    cleanupAfterLoop?: boolean;\n}\n\nexport class ScriptProcessor {\n    scripts: Script[];\n    scriptMap: Record<string, ExecutionStep[]>;\n    external: Record<string, any>;\n\n    constructor(scripts: Script[], external: Record<string, any> = DEFAULT_EXTERNALS, actionConversionMap: ActionConvertorList = DEFAULT_CONVERTORS) {\n        this.scripts = scripts;\n        this.scriptMap = convertScripts(this.scripts, external, actionConversionMap);\n        this.external = external;\n    }\n\n    private createContext(): Context {\n        return {\n            parameters: [],\n            cleanupActions: [],\n            objectPool: [],\n        };\n    }\n\n    private createLoopCleanup(behavior: LoopBehavior, context: Context) {\n        const cleanupActions = context.cleanupActions;\n        return behavior.cleanupAfterLoop && cleanupActions ? () => {\n            for (let action of cleanupActions) {\n                action();\n            }\n            cleanupActions.length = 0;\n        } : () => {};\n    }\n\n    private getSteps(filter: ScriptFilter) {\n        const scripts = filterScripts(this.scripts, filter);\n        const steps: ExecutionStep[] = [];\n        scripts.forEach(({name}) => this.scriptMap[name].forEach(step => steps.push(step)));\n        return steps;\n    }\n\n    runByName(name: string): () => void {\n        const context: Context = this.createContext();\n        execute(this.getSteps({ name }), undefined, context);\n        return () => context.cleanupActions?.forEach(action => action());\n    }\n\n    runByTags(tags: Tag[]): () => void {\n        const context: Context = this.createContext();\n        execute(this.getSteps({ tags }), undefined, context);\n        return () => context.cleanupActions?.forEach(action => action());\n    }\n\n    private loopWithFilter(filter: ScriptFilter, behavior: LoopBehavior = {}): () => void {\n        const context: Context = this.createContext();\n        const parameters: ExecutionParameters = { time: 0 };\n        const steps = this.getSteps(filter);\n        const loopCleanup = this.createLoopCleanup(behavior, context);\n        const loop = (time: number) => {\n            parameters.time = time;\n            execute(steps, parameters, context);\n            loopCleanup();\n            animationFrameId = requestAnimationFrame(loop);\n        };\n        let animationFrameId = requestAnimationFrame(loop);\n        return () => {\n            loopCleanup();\n            cancelAnimationFrame(animationFrameId);\n        }\n    }\n    \n    loopByName(name: string, behavior: LoopBehavior = {}): () => void {\n        return this.loopWithFilter({ name }, behavior);\n    }\n\n    loopByTags(tags: string[], behavior: LoopBehavior = {}) {\n        return this.loopWithFilter({ tags }, behavior);\n    }\n}"],"names":["ConvertBehavior","DEFAULT_EXTERNALS","log","console","execute","steps","parameters","context","changedParameters","length","push","_iterator","_createForOfIteratorHelperLoose","_step","done","step","value","pop","hasFormula","resolution","isFormula","Array","isArray","some","item","formula","charAt","calculateEvaluator","evaluator","defaultValue","scope","_context$parameters","_evaluator$evaluate","evaluate","e","error","getFormulaEvaluator","Error","mathEvaluator","math","substring","compile","calculateArray","map","calculateResolution","valueOf","evalItem","calculateNumber","undefined","calculateTypedArray","ArrayConstructor","defaultNumberValue","Float32Array","Int8Array","Uint8Array","Int16Array","Uint16Array","Int32Array","Uint32Array","array","compiledArray","i","bufferArray","BYTES_PER_ELEMENT","typeArrayResolution","calculateString","calculateBoolean","filterScripts","scripts","filter","_ref","name","tags","namesToFilter","indexOf","_filter$tags","every","tag","t","convertActionsProperty","action","results","getSteps","external","_action$actions","actions","forEach","convertAction","convertConditionProperty","condition","SKIP_REMAINING","subAction","_objectWithoutPropertiesLoose","_excluded","conditionResolution","subStepResults","convertLogProperty","_","messages","resolutions","m","_external","apply","r","convertLoopProperty","stepResults","loop","loopResolution","numLoops","index","convertParametersProperty","paramResolutions","paramEntries","Object","entries","key","paramValues","_context$objectPool$p","_context$objectPool","objectPool","k","entry","_context$objectPool2","convertScriptProperty","script","DEFAULT_CONVERTORS","actionConversionMap","convertor","convertScripts","scriptMap","scriptSteps","ScriptProcessor","_proto","prototype","createContext","cleanupActions","createLoopCleanup","behavior","cleanupAfterLoop","_this","runByName","_context$cleanupActio","runByTags","_context$cleanupActio2","loopWithFilter","time","loopCleanup","animationFrameId","requestAnimationFrame","cancelAnimationFrame","loopByName","loopByTags"],"mappings":"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"}