{"version":3,"file":"index.modern.js","sources":["../src/core/convertor/Convertor.ts","../src/core/execution/ExecutionStep.ts","../src/core/resolutions/calculateEvaluator.ts","../src/core/resolutions/calculateNumber.ts","../src/core/resolutions/TypedArrayResolution.ts","../src/core/resolutions/calculate.ts","../src/core/resolutions/StringResolution.ts","../src/core/scripts/Script.ts"],"sourcesContent":["import { DokAction } from \"../actions/Action\";\nimport { ExecutionStep } from \"../execution/ExecutionStep\";\nimport { ActionConversionMap } from \"./convert-action\";\n\nexport enum ConvertBehavior {\n    NONE,\n    SKIP_REMAINING,\n}\n\nexport type Convertor = (action: DokAction, results: ExecutionStep[], getSteps: (name?: string) => ExecutionStep[], external?: Record<string, any>, actionConversionMap?: ActionConversionMap) => ConvertBehavior | void;\n\nexport const DEFAULT_EXTERNALS = {\n    log: console.log,\n};\n","import { Context } from \"../context/Context\";\nimport { SupportedTypes } from \"../resolutions/calculate\";\n\nexport type ExecutionStep = (context: Context, parameters: Record<string, SupportedTypes | undefined>) => void;\n\nexport function execute(steps: ExecutionStep[], parameters: Record<string, SupportedTypes | undefined> = {}, context: Context = {}) {\n    for (let step of steps) {\n        step(context, parameters);\n    }\n}\n","import * as math from \"mathjs\";\nimport { Context } from \"../context/Context\";\nimport { Expression, Formula } from \"./Formula\";\n\n\nexport function calculateEvaluator<T>(evaluator: math.EvalFunction, context: Context | undefined, formula: Formula | Expression, defaultValue: T): T {\n    const scope = context?.parameters?.[context.parameters.length - 1];\n    try {\n        return evaluator.evaluate(scope ?? {}) ?? defaultValue;\n    } catch (e) {\n        console.error(\"Error: \" + e + \" on formula: \" + formula + \", scope: \", scope);\n    }\n    return defaultValue;\n}\n\nexport function getFormulaEvaluator(value: Formula | Expression): math.EvalFunction {\n    const formula = typeof(value) === \"string\" ? value : value.formula;\n    if (formula.charAt(0) !== \"{\" || formula.charAt(formula.length-1) !== \"}\") {\n        throw new Error(`Formula: ${value} must start and end with brackets.`);\n    }\n    const mathEvaluator = math.parse(formula.substring(1, formula.length - 1)).compile();\n    return mathEvaluator;\n}\n\n","import { ValueOf } from \"../types/ValueOf\";\nimport { Context } from \"../context/Context\";\nimport { calculateEvaluator, getFormulaEvaluator } from \"./calculateEvaluator\";\nimport { NumberResolution } from \"./NumberResolution\";\n\n\nexport function calculateNumber(value: NumberResolution, defaultValue = 0): ValueOf<number> {\n    if (typeof (value) === \"number\") {\n        return value;\n    }\n    if (value === undefined) {\n        return {\n            valueOf() {\n                return defaultValue;\n            }\n        };\n    }\n    const evaluator = getFormulaEvaluator(value);\n    return {\n        valueOf(context?: Context): number {\n            return calculateEvaluator<number>(evaluator, context, value, defaultValue);\n        }\n    };\n}\n","import { Context } from \"../context/Context\";\nimport { TypedArray } from \"../types/TypedArray\";\nimport { ValueOf } from \"../types/ValueOf\";\nimport { Expression, Formula } from \"./Formula\";\nimport { NumberResolution } from \"./NumberResolution\";\nimport { calculateNumber } from \"./calculateNumber\";\nimport { calculateEvaluator, getFormulaEvaluator } from \"./calculateEvaluator\";\n\nexport type TypedArrayResolution = TypedArray | NumberResolution[] | Formula | Expression;\n\ninterface TypedArrayConstructor {\n    new (size: number): TypedArray;\n    BYTES_PER_ELEMENT: number;\n}\n\nexport function calculateTypedArray(value: TypedArrayResolution, ArrayConstructor: TypedArrayConstructor = Float32Array, defaultNumberValue = 0): ValueOf<TypedArray> {\n    if (value instanceof Float32Array || value instanceof Int8Array || value instanceof Uint8Array\n        || value instanceof Int16Array || value instanceof Uint16Array\n        || value instanceof Int32Array || value instanceof Uint32Array) {\n        return value;\n    }\n    if (Array.isArray(value)) {\n        const array = new ArrayConstructor(value.length);\n        const compiledArray = value.map(value => calculateNumber(value, defaultNumberValue));\n        return {\n            valueOf(context?: Context): TypedArray {\n                for (let i = 0; i < compiledArray.length; i++) {\n                    array[i] = compiledArray[i].valueOf(context);\n                }\n                return array;\n            }\n        };    \n    }\n    const formula = value;\n    const evaluator = getFormulaEvaluator(formula);\n    let bufferArray: TypedArray;\n    return {\n        valueOf(context?: Context): TypedArray {\n            const value = calculateEvaluator<TypedArray | undefined>(evaluator, context, formula, undefined);\n            if (value instanceof Float32Array || value instanceof Int8Array || value instanceof Uint8Array\n                || value instanceof Int16Array || value instanceof Uint16Array\n                || value instanceof Int32Array || value instanceof Uint32Array) {\n                return value;\n            }\n            if (typeof(value) === \"number\") {\n                if (!bufferArray) {\n                    bufferArray = new ArrayConstructor(value / ArrayConstructor.BYTES_PER_ELEMENT);\n                }\n                return bufferArray;\n            }\n            throw new Error(`Formula ${formula} doesnt't evaluate to a TypedArray.`);\n        }\n    };\n}","import { Context } from \"../context/Context\";\nimport { TypedArray } from \"../types/TypedArray\";\nimport { ValueOf } from \"../types/ValueOf\";\nimport { Resolution } from \"./Resolution\";\nimport { calculateTypedArray } from \"./TypedArrayResolution\";\nimport { calculateEvaluator, getFormulaEvaluator } from \"./calculateEvaluator\";\n\nexport function calculateResolution(value: Resolution): ValueOf<SupportedTypes | undefined> {\n    if (value === undefined) {\n        return {\n            valueOf() {\n                return undefined;\n            }\n        };\n    }\n    if (value instanceof Float32Array || value instanceof Int8Array || value instanceof Uint8Array\n        || value instanceof Int16Array || value instanceof Uint16Array\n        || value instanceof Int32Array || value instanceof Uint32Array) {\n        return value;\n    }\n    if (typeof(value) === \"number\") {\n        return value;\n    }\n    if (Array.isArray(value)) {\n        return calculateTypedArray(value);\n    }\n    if (typeof(value) === \"string\" && (value.charAt(0) !== \"{\" || value.charAt(value.length-1) !== \"}\")) {\n        return value;\n    }\n    const evaluator = getFormulaEvaluator(value);\n    return {\n        valueOf(context?: Context): string | number | undefined {\n            return calculateEvaluator<string | number | undefined>(evaluator, context, value, undefined);\n        }\n    };\n}\n\n\nexport type SupportedTypes = string | number | TypedArray;\n","import { Context } from \"../context/Context\";\nimport { ValueOf } from \"../types/ValueOf\";\nimport { Expression, Formula } from \"./Formula\";\nimport { calculateEvaluator, getFormulaEvaluator } from \"./calculateEvaluator\";\n\nexport type StringResolution = string | Formula | Expression | undefined;\n\nexport function calculateString(value: StringResolution, defaultValue = \"\"): ValueOf<string> {\n    if (typeof(value) === \"string\" && (value.charAt(0) !== \"{\" || value.charAt(value.length-1) !== \"}\")) {\n        return value;\n    }\n    if (value === undefined) {\n        return {\n            valueOf() {\n                return defaultValue;\n            }\n        };\n    }\n    const evaluator = getFormulaEvaluator(value);\n    return {\n        valueOf(context?: Context): string {\n            return calculateEvaluator<string>(evaluator, context, value, defaultValue);\n        }\n    };\n\n}\n","import { DokAction } from \"../actions/Action\";\nimport { Resolution } from \"../resolutions/Resolution\";\n\nexport type Tag = string|[string, string|number|boolean];\n\nexport interface Script {\n    name: string;\n    parameters?: (string|[string, Resolution])[];\n    actions: DokAction[];\n    tags?: Tag[];\n}\n\nexport function getByTags(scripts: Script[], tags: Tag[]): Script[] {\n    return scripts.filter(script => {\n        return tags.every(tag => {\n            if (typeof(tag) === \"string\") {\n                return script.tags?.some((t) => t === tag || (Array.isArray(t) && t[0] === tag))\n            } else {\n                return script.tags?.some((t) => Array.isArray(t) && t[0] === tag[0] && t[1] === tag[1]);\n            }\n        });\n    });\n}\n\nexport function getScriptNamesByTags(scripts: Script[], tags: Tag[]): string[] {\n    return getByTags(scripts, tags).map(({ name }) => name);\n}\n\nexport function getByName(scripts: Script[], name: string | string[]): Script[] {\n    return scripts.filter(script => name.includes(script.name));\n}"],"names":["ConvertBehavior","DEFAULT_EXTERNALS","log","console","execute","steps","parameters","context","_iterator","_createForOfIteratorHelperLoose","_step","done","step","value","calculateEvaluator","evaluator","formula","defaultValue","scope","_context$parameters","length","_evaluator$evaluate","evaluate","e","error","getFormulaEvaluator","charAt","Error","mathEvaluator","math","substring","compile","calculateNumber","undefined","valueOf","calculateTypedArray","ArrayConstructor","defaultNumberValue","Float32Array","Int8Array","Uint8Array","Int16Array","Uint16Array","Int32Array","Uint32Array","Array","isArray","array","compiledArray","map","i","bufferArray","BYTES_PER_ELEMENT","calculateResolution","calculateString","getByTags","scripts","tags","filter","script","every","tag","_script$tags","some","t","_script$tags2","getScriptNamesByTags","_ref","name","getByName","includes"],"mappings":"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"}