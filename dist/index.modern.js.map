{"version":3,"file":"index.modern.js","sources":["../src/core/convertor/Convertor.ts","../src/core/execution/ExecutionStep.ts","../src/core/scripts/Script.ts","../src/core/convertor/actions-convertor.ts","../src/core/resolutions/calculateEvaluator.ts","../src/core/resolutions/calculateBoolean.ts","../src/core/convertor/condition-convertor.ts","../src/core/resolutions/calculateArray.ts","../src/core/resolutions/calculateNumber.ts","../src/core/resolutions/calculateTypeArray.ts","../src/core/resolutions/calculateMap.ts","../src/core/resolutions/calculate.ts","../src/core/convertor/log-convertor.ts","../src/core/convertor/loop-convertor.ts","../src/core/convertor/parameters-convertor.ts","../src/core/convertor/script-convertor.ts","../src/core/convertor/convert-action.ts","../src/core/resolutions/calculateString.ts","../src/core/processor/ScriptProcessor.ts"],"sourcesContent":["import { ExecutionStep, GetSteps } from \"../execution/ExecutionStep\";\nimport { ActionConvertorList } from \"./convert-action\";\n\nexport enum ConvertBehavior {\n    NONE,\n    SKIP_REMAINING,\n}\n\nexport type Convertor<T> = (action: T, results: ExecutionStep[], getSteps: GetSteps, external: Record<string, any>, actionConversionMap: ActionConvertorList) => ConvertBehavior | void;\n\nexport const DEFAULT_EXTERNALS = {\n    log: console.log,\n};\n","import { Context } from \"../context/Context\";\nimport { SupportedTypes } from \"../resolutions/SupportedTypes\";\nimport { ScriptFilter } from \"../scripts/Script\";\n\nexport type ExecutionParameters = Record<string, SupportedTypes>;\nexport type ExecutionStep = (context: Context, parameters: ExecutionParameters) => void;\nexport type GetSteps = (filter: ScriptFilter) => ExecutionStep[];\n\nexport function execute(steps: ExecutionStep[], parameters: ExecutionParameters = {}, context: Context = {}) {\n    if (!context.parameters) {\n        context.parameters = [];\n    }\n\n    const changedParameters = context.parameters[context.parameters.length-1] !== parameters;\n    if (changedParameters) {\n        context.parameters.push(parameters);\n    }\n    for (let step of steps) {\n        step(context, parameters);\n    }\n    if (changedParameters) {\n        context.parameters.pop();\n    }\n}\n","import { Resolution } from \"../resolutions/Resolution\";\n\nexport type Tag = string|[string, string|number|boolean];\n\nexport interface Script<T> {\n    name?: string;\n    parameters?: (string|[string, Resolution])[];\n    actions: T[];\n    tags?: Tag[];\n}\n\nexport interface ScriptFilter {\n    name?: string | string[];\n    tags?: Tag[];\n}\n\nexport function filterScripts<T>(scripts: Script<T>[], filter: ScriptFilter): Script<T>[] {\n    return scripts.filter(({name, tags}) => {\n        if (name) {\n            const namesToFilter = !filter.name ? undefined : Array.isArray(filter.name) ? filter.name : [filter.name];\n            if (namesToFilter?.length && namesToFilter.indexOf(name) < 0) {\n                return false;\n            }    \n        }\n        if (filter.tags && !filter.tags?.every(tag => {\n            if (typeof(tag) === \"string\") {\n                return tags?.some((t) => t === tag || (Array.isArray(t) && t[0] === tag))\n            } else {\n                return tags?.some((t) => Array.isArray(t) && t[0] === tag[0] && t[1] === tag[1]);\n            }\n        })) {\n            return false;\n        }\n        return true;\n    });\n}\n","import { ActionsAction } from \"../actions/ActionsAction\";\nimport { Convertor } from \"./Convertor\";\nimport { convertAction } from \"./convert-action\";\n\nexport const convertActionsProperty: Convertor<ActionsAction> = (\n        action,\n        results,\n        getSteps,\n        external,\n        actionConvertorMap) => {\n    action.actions?.forEach(action => convertAction(action, results, getSteps, external, actionConvertorMap));\n}\n\n","import * as math from \"mathjs\";\nimport { Context } from \"../context/Context\";\nimport { Expression, Formula } from \"./Formula\";\nimport { Resolution } from \"./Resolution\";\n\nexport function hasFormula(resolution: Resolution): boolean {\n    if (isFormula(resolution)) {\n        return true;\n    }\n    if (Array.isArray(resolution)) {\n        return resolution.some(item => !hasFormula(item));\n    }\n    if (typeof (resolution) === \"object\") {\n        return hasFormula(Object.values(resolution));\n    }\n    return false;\n}\n\nexport function isFormula(value: Formula | Expression | any) {\n    if (!value) {\n        return false;\n    }\n    if (typeof(value) !== \"string\" && typeof(value) !== \"object\") {\n        return false;\n    }\n    const formula = typeof(value) === \"string\" ? value : value.formula;\n    return formula?.charAt(0) === \"{\" && formula?.charAt(formula.length-1) === \"}\";\n}\n\nexport function calculateEvaluator<T>(evaluator: math.EvalFunction, context: Context | undefined, formula: Formula | Expression, defaultValue: T): T {\n    const scope = context?.parameters?.[context.parameters.length - 1];\n    try {\n        return evaluator.evaluate(scope ?? {}) ?? defaultValue;\n    } catch (e) {\n        console.error(\"Error: \" + e + \" on formula: \" + formula + \", scope: \", scope);\n    }\n    return defaultValue;\n}\n\nexport function getFormulaEvaluator(value: Formula | Expression): math.EvalFunction {\n    if (!isFormula(value)) {\n        throw new Error(`Formula: ${value} must start and end with brackets.`);\n    }\n    const formula = typeof(value) === \"string\" ? value : value.formula;\n    const mathEvaluator = math.parse(formula.substring(1, formula.length - 1)).compile();\n    return mathEvaluator;\n}\n\n","import { ValueOf } from \"../types/ValueOf\";\nimport { Context } from \"../context/Context\";\nimport { calculateEvaluator, getFormulaEvaluator } from \"./calculateEvaluator\";\nimport { NumberResolution } from \"./NumberResolution\";\nimport { BooleanResolution } from \"./BooleanResolution\";\n\nexport function calculateBoolean(value: BooleanResolution | NumberResolution, defaultValue = false): ValueOf<boolean> {\n    if (typeof(value) === \"boolean\" || typeof(value) === \"number\") {\n        return !!value;\n    }\n    if (value === undefined) {\n        return {\n            valueOf() {\n                return defaultValue;\n            }\n        };\n    }\n    const evaluator = getFormulaEvaluator(value);\n    return {\n        valueOf(context?: Context): boolean {\n            return !!calculateEvaluator<boolean | number>(evaluator, context, value, defaultValue);\n        }\n    };\n}\n","import { ConvertBehavior, Convertor, DEFAULT_EXTERNALS } from \"./Convertor\";\nimport { ExecutionStep, execute } from \"../execution/ExecutionStep\";\nimport { convertAction } from \"./convert-action\";\nimport { DokAction } from \"../actions/Action\";\nimport { calculateBoolean } from \"../resolutions/calculateBoolean\";\n\nexport const convertConditionProperty: Convertor<DokAction> = (\n        action,\n        results,\n        getSteps,\n        external = DEFAULT_EXTERNALS,\n        actionConversionMap) => {\n    if (action.condition === undefined) {\n        return;\n    }\n    if (!action.condition) {\n        return ConvertBehavior.SKIP_REMAINING;\n    }\n    const { condition, ...subAction } = action;\n    const conditionResolution = calculateBoolean(condition);\n    const subStepResults: ExecutionStep[] = [];\n    convertAction(subAction, subStepResults, getSteps, external, actionConversionMap);\n    results.push((context, parameters) => {\n        if (conditionResolution.valueOf(context)) {\n            execute(subStepResults, parameters, context);\n        }\n    });\n    return ConvertBehavior.SKIP_REMAINING;\n}\n","import { Context } from \"../context/Context\";\nimport { ValueOf } from \"../types/ValueOf\";\nimport { ArrayResolution } from \"./ArrayResolution\";\nimport { calculateResolution } from \"./calculate\";\nimport { hasFormula } from \"./calculateEvaluator\";\nimport { SupportedTypes } from \"./SupportedTypes\";\n\nexport function calculateArray(value: ArrayResolution): ValueOf<SupportedTypes> {\n    //  check if we have any resolution to perform\n    if (!hasFormula(value)) {\n        if (typeof(value) === \"object\") {\n            throw new Error(\"value can't be an object.\");\n        }\n        return value;\n    }\n    const evaluator = value.map(resolution => calculateResolution(resolution));\n\n    return {\n        valueOf(context?: Context): SupportedTypes {\n            const value = evaluator.map(evalItem => evalItem.valueOf(context));\n            return value;\n        }\n    };\n}","import { ValueOf } from \"../types/ValueOf\";\nimport { Context } from \"../context/Context\";\nimport { calculateEvaluator, getFormulaEvaluator } from \"./calculateEvaluator\";\nimport { NumberResolution } from \"./NumberResolution\";\n\n\nexport function calculateNumber<T extends number = number>(value: NumberResolution<T>, defaultValue:T|0 = 0): ValueOf<T|0>|number {\n    if (typeof(value) === \"number\") {\n        return value;\n    }\n    if (value === undefined) {\n        return {\n            valueOf() {\n                return defaultValue;\n            }\n        };\n    }\n    const evaluator = getFormulaEvaluator(value);\n    return {\n        valueOf(context?: Context): T|0 {\n            return calculateEvaluator<T|0>(evaluator, context, value, defaultValue);\n        }\n    };\n}\n","import { Context } from \"../context/Context\";\nimport { TypedArray } from \"../types/TypedArray\";\nimport { ValueOf } from \"../types/ValueOf\";\nimport { calculateNumber } from \"./calculateNumber\";\nimport { calculateEvaluator, getFormulaEvaluator } from \"./calculateEvaluator\";\nimport { TypedArrayResolution } from \"./TypedArrayResolution\";\n\ninterface TypedArrayConstructor {\n    new (size: number): TypedArray;\n    BYTES_PER_ELEMENT: number;\n}\n\nexport function calculateTypedArray(value: TypedArrayResolution, ArrayConstructor: TypedArrayConstructor = Float32Array, defaultNumberValue = 0): ValueOf<TypedArray> {\n    if (value instanceof Float32Array || value instanceof Int8Array || value instanceof Uint8Array\n        || value instanceof Int16Array || value instanceof Uint16Array\n        || value instanceof Int32Array || value instanceof Uint32Array) {\n        return value;\n    }\n    if (Array.isArray(value)) {\n        const array = new ArrayConstructor(value.length);\n        const compiledArray = value.map(value => calculateNumber(value, defaultNumberValue));\n        return {\n            valueOf(context?: Context): TypedArray {\n                for (let i = 0; i < compiledArray.length; i++) {\n                    array[i] = compiledArray[i].valueOf(context);\n                }\n                return array;\n            }\n        };    \n    }\n    const formula = value;\n    const evaluator = getFormulaEvaluator(formula);\n    let bufferArray: TypedArray;\n    return {\n        valueOf(context?: Context): TypedArray {\n            const value = calculateEvaluator<TypedArray | number[] | undefined>(evaluator, context, formula, undefined);\n            if (value instanceof Float32Array || value instanceof Int8Array || value instanceof Uint8Array\n                || value instanceof Int16Array || value instanceof Uint16Array\n                || value instanceof Int32Array || value instanceof Uint32Array) {\n                return value;\n            }\n            if (Array.isArray(value)) {\n                if (!bufferArray) {\n                    bufferArray = new ArrayConstructor(value.length);\n                }\n                bufferArray.set(value);\n                return bufferArray;\n            }\n        \n            if (typeof(value) === \"number\") {\n                if (!bufferArray) {\n                    bufferArray = new ArrayConstructor(value / ArrayConstructor.BYTES_PER_ELEMENT);\n                }\n                return bufferArray;\n            }\n            throw new Error(`Formula ${formula} doesnt't evaluate to a TypedArray.`);\n        }\n    };\n}","import { Context } from \"../context/Context\";\nimport { ValueOf } from \"../types/ValueOf\";\nimport { calculateResolution } from \"./calculate\";\nimport { calculateEvaluator, getFormulaEvaluator, hasFormula, isFormula } from \"./calculateEvaluator\";\nimport { Expression, Formula } from \"./Formula\";\nimport { MapResolution } from \"./MapResolution\";\nimport { SupportedTypes } from \"./SupportedTypes\";\n\nexport function calculateMap(value: MapResolution): ValueOf<SupportedTypes> {\n    //  check if we have any resolution to perform\n    if (!hasFormula(value)) {\n        return { valueOf: () => value };\n    }\n    if (isFormula(value)) {\n        const formula = value as (Formula|Expression);\n        const evaluator = getFormulaEvaluator(formula);\n        return {\n            valueOf(context?: Context): string | number | undefined {\n                return calculateEvaluator<string | number | undefined>(evaluator, context, formula, undefined);\n            }\n        };\n    }\n    const evaluatorEntries = Object.entries(value).map(([key, resolution]) => [key, calculateResolution(resolution)]);\n\n    return {\n        valueOf(context?: Context): SupportedTypes {\n            return Object.fromEntries(evaluatorEntries.map(([key, evalItem]) => [key, evalItem.valueOf(context)]));\n        }\n    };\n}","import { Context } from \"../context/Context\";\nimport { ValueOf } from \"../types/ValueOf\";\nimport { ArrayResolution } from \"./ArrayResolution\";\nimport { Resolution } from \"./Resolution\";\nimport { calculateArray } from \"./calculateArray\";\nimport { calculateEvaluator, getFormulaEvaluator, hasFormula } from \"./calculateEvaluator\";\nimport { SupportedTypes } from \"./SupportedTypes\";\nimport { calculateTypedArray } from \"./calculateTypeArray\";\nimport { calculateMap } from \"./calculateMap\";\n\nexport function calculateResolution(value: Resolution): ValueOf<SupportedTypes> {\n    if (value === undefined) {\n        return {\n            valueOf() {\n                return undefined;\n            }\n        };\n    }\n    if (value instanceof Float32Array || value instanceof Int8Array || value instanceof Uint8Array\n        || value instanceof Int16Array || value instanceof Uint16Array\n        || value instanceof Int32Array || value instanceof Uint32Array) {\n        return value;\n    }\n    if (typeof(value) === \"number\" || typeof(value) === \"boolean\") {\n        return value;\n    }\n    if (Array.isArray(value)) {\n        if (hasFormula(value)) {\n            return calculateArray(value);\n        }\n        const typeArrayResolution = value as Exclude<typeof value, ArrayResolution>;\n        return calculateTypedArray(typeArrayResolution);\n    }\n    if (typeof(value) === \"string\" && (value.charAt(0) !== \"{\" || value.charAt(value.length-1) !== \"}\")) {\n        return value;\n    }\n    if (typeof(value) === \"object\") {\n        return calculateMap(value);\n    }\n    const evaluator = getFormulaEvaluator(value);\n    return {\n        valueOf(context?: Context): string | number | undefined {\n            return calculateEvaluator<string | number | undefined>(evaluator, context, value, undefined);\n        }\n    };\n}\n","import { LogAction } from \"../actions/LogAction\";\nimport { Resolution } from \"../resolutions/Resolution\";\nimport { calculateResolution } from \"../resolutions/calculate\";\nimport { Convertor, DEFAULT_EXTERNALS } from \"./Convertor\";\n\nexport const convertLogProperty: Convertor<LogAction> = (\n        action,\n        results,\n        _,\n        external = DEFAULT_EXTERNALS) => {\n    if (action.log === undefined) {\n        return;\n    }\n    const messages: Resolution[] = Array.isArray(action.log) ? action.log : [action.log];\n    const resolutions = messages.map(m => calculateResolution(m));\n    results.push((context)=> external.log(...resolutions.map(r => r.valueOf(context))));\n}\n\n","import { ExecutionStep, execute } from \"../execution/ExecutionStep\";\nimport { ConvertBehavior, Convertor, DEFAULT_EXTERNALS } from \"./Convertor\";\nimport { calculateNumber } from \"../resolutions/calculateNumber\";\nimport { DEFAULT_CONVERTORS, convertAction } from \"./convert-action\";\nimport { LogicAction } from \"../actions/LogicAction\";\n\nexport const convertLoopProperty: Convertor<LogicAction> = (\n        action,\n        stepResults: ExecutionStep[],\n        getSteps,\n        external = DEFAULT_EXTERNALS,\n        actionConversionMap = DEFAULT_CONVERTORS) => {\n    if (action.loop === undefined) {\n        return;\n    }\n    if (!action.loop) {\n        return ConvertBehavior.SKIP_REMAINING;\n    }\n    const { loop, ...subAction } = action;\n    const loopResolution = calculateNumber(loop, 0);\n    const subStepResults: ExecutionStep[] = [];\n    convertAction(subAction, subStepResults, getSteps, external, actionConversionMap);\n    stepResults.push((context, parameters) => {\n        const numLoops = loopResolution.valueOf(context);\n        for (let i = 0; i < numLoops; i++) {\n            parameters.index = i;\n            execute(subStepResults, parameters, context);\n        }\n    });\n    return ConvertBehavior.SKIP_REMAINING;\n}\n","import { ConvertBehavior, Convertor, DEFAULT_EXTERNALS } from \"./Convertor\";\nimport { Resolution } from \"../resolutions/Resolution\";\nimport { calculateResolution } from \"../resolutions/calculate\";\nimport { ValueOf } from \"../types/ValueOf\";\nimport { ExecutionParameters, ExecutionStep, execute } from \"../execution/ExecutionStep\";\nimport { convertAction } from \"./convert-action\";\nimport { SupportedTypes } from \"../resolutions/SupportedTypes\";\nimport { ScriptAction } from \"../actions/ScriptAction\";\n\nexport const convertParametersProperty: Convertor<ScriptAction> = (\n        action,\n        results,\n        getSteps,\n        external = DEFAULT_EXTERNALS,\n        actionConversionMap) => {\n    if (!action.parameters) {\n        return;\n    }\n    const { parameters, ...subAction } = action;\n\n    const paramResolutions: Record<string, Resolution> = (parameters ?? {});\n    const paramEntries: [string, ValueOf<SupportedTypes>][] = Object.entries(paramResolutions)\n        .map(([key, resolution]) => [key, calculateResolution(resolution)]);\n\n    const subStepResults: ExecutionStep[] = [];\n    convertAction(subAction, subStepResults, getSteps, external, actionConversionMap);\n\n    results.push((context, parameters) => {\n\n        const paramValues: ExecutionParameters = context.objectPool?.pop() ?? {};\n        for (let k in parameters) {\n            paramValues[k] = parameters[k];\n        }\n        for (let entry of paramEntries) {\n            const key: string = entry[0];\n            paramValues[key] = entry[1].valueOf(context);\n        }\n\n        execute(subStepResults, paramValues, context);\n\n        for (let k in paramValues) {\n            delete paramValues[k];\n        }\n        context.objectPool?.push(paramValues);\n    });\n    return ConvertBehavior.SKIP_REMAINING;\n}","import { ScriptAction } from \"../actions/ScriptAction\";\nimport { execute } from \"../execution/ExecutionStep\";\nimport { Convertor } from \"./Convertor\";\n\nexport const convertScriptProperty: Convertor<ScriptAction> = (\n        action,\n        results,\n        getSteps) => {\n    if (!action.script || action.scriptTags?.length) {\n        return;\n    }\n    const steps = getSteps({ name: action.script, tags: action.scriptTags });\n    results.push((context, parameters) => execute(steps, parameters, context));\n}\n\n","import { Context } from \"../context/Context\";\nimport { ExecutionParameters, ExecutionStep, GetSteps, execute } from \"../execution/ExecutionStep\";\nimport { Script, ScriptFilter, filterScripts } from \"../scripts/Script\";\nimport { ConvertBehavior, Convertor, DEFAULT_EXTERNALS } from \"./Convertor\";\nimport { convertActionsProperty } from \"./actions-convertor\";\nimport { convertConditionProperty } from \"./condition-convertor\";\nimport { convertLogProperty } from \"./log-convertor\";\nimport { convertLoopProperty } from \"./loop-convertor\";\nimport { convertParametersProperty } from \"./parameters-convertor\";\nimport { convertScriptProperty } from \"./script-convertor\";\n\nexport type ActionConvertorList = Convertor<any>[];\n\nexport const DEFAULT_CONVERTORS: ActionConvertorList = [\n    convertParametersProperty,\n    convertLoopProperty,\n    convertConditionProperty,\n    convertLogProperty,\n    convertScriptProperty,\n    convertActionsProperty,\n];\n\nexport function convertAction<T>(\n        action: T,\n        stepResults: ExecutionStep[],\n        getSteps: GetSteps,\n        external: Record<string, any> = DEFAULT_EXTERNALS,\n        actionConversionMap: ActionConvertorList): ConvertBehavior | undefined {\n    for (let convertor of actionConversionMap) {\n        if (convertor(action, stepResults, getSteps, external, actionConversionMap) === ConvertBehavior.SKIP_REMAINING) {\n            return;\n        }\n    }\n    return;    \n}\n\nexport function convertScripts<T>(\n        scripts: Script<T>[],\n        external: Record<string, any> = DEFAULT_EXTERNALS,\n        actionConversionMap = DEFAULT_CONVERTORS): Map<Script<T>, ExecutionStep[]> {\n    const scriptMap: Map<Script<T>, ExecutionStep[]> = new Map();\n    const getSteps = (filter: ScriptFilter) => {\n        const filteredScripts = filterScripts(scripts, filter);\n        const steps: ExecutionStep[] = [];\n        filteredScripts.forEach(script => steps.push(...(scriptMap.get(script)??[])));\n        return steps;\n    };\n    scripts.forEach(script => {\n        if (!scriptMap.has(script)) {\n            scriptMap.set(script, []);\n        }\n        const scriptSteps = scriptMap.get(script) ?? [];\n        script.actions.forEach(action => {\n            convertAction(action, scriptSteps, getSteps, external, actionConversionMap);\n        });\n    });\n    return scriptMap;\n}\n\nexport function executeScript<T>(\n        scriptName: string,\n        parameters: ExecutionParameters = {},\n        scripts: Script<T>[],\n        external: Record<string, any> = DEFAULT_EXTERNALS,\n        actionConversionMap = DEFAULT_CONVERTORS): () => void {\n    const context: Context = {\n        parameters: [parameters],\n        cleanupActions: []\n    };\n    const scriptMap = convertScripts(scripts, external, actionConversionMap);\n    const script = scripts.find(({name}) => name === scriptName);\n    const steps = script ? scriptMap.get(script) : [];\n    if (steps?.length) {\n        execute(steps, {}, context);\n    }\n    return () => {\n        context.cleanupActions!.forEach(action => action());\n        context.cleanupActions!.length = 0;\n    };\n}\n","import { Context } from \"../context/Context\";\nimport { ValueOf } from \"../types/ValueOf\";\nimport { StringResolution } from \"./StringResolution\";\nimport { calculateEvaluator, getFormulaEvaluator, isFormula } from \"./calculateEvaluator\";\n\nexport function calculateString<T extends string = string>(value: StringResolution<T>, defaultValue: T|\"\" = \"\"): ValueOf<T|\"\">|string {\n    if (typeof(value) === \"string\" && !isFormula(value)) {\n        return value;\n    }\n    if (value === undefined) {\n        return {\n            valueOf() {\n                return defaultValue;\n            }\n        };\n    }\n    const evaluator = getFormulaEvaluator(value);\n    return {\n        valueOf(context?: Context): T|\"\" {\n            return calculateEvaluator<T|\"\">(evaluator, context, value, defaultValue);\n        }\n    };\n\n}\n","import { Context } from \"../context/Context\";\nimport { DEFAULT_EXTERNALS } from \"../convertor/Convertor\";\nimport { ActionConvertorList, DEFAULT_CONVERTORS, convertScripts } from \"../convertor/convert-action\";\nimport { ExecutionParameters, ExecutionStep, execute } from \"../execution/ExecutionStep\";\nimport { Script, ScriptFilter, Tag, filterScripts } from \"../scripts/Script\";\n\nexport interface LoopBehavior {\n    cleanupAfterLoop?: boolean;\n}\n\nexport class ScriptProcessor<T> {\n    scripts: Script<T>[];\n    scriptMap: Map<Script<T>, ExecutionStep[]>;\n    external: Record<string, any>;\n\n    constructor(scripts: Script<T>[], external: Record<string, any> = DEFAULT_EXTERNALS, actionConversionMap: ActionConvertorList = DEFAULT_CONVERTORS) {\n        this.scripts = scripts;\n        this.scriptMap = convertScripts(this.scripts, external, actionConversionMap);\n        this.external = external;\n    }\n\n    private createContext(): Context {\n        return {\n            parameters: [],\n            cleanupActions: [],\n            objectPool: [],\n        };\n    }\n\n    private createLoopCleanup(behavior: LoopBehavior, context: Context) {\n        const cleanupActions = context.cleanupActions;\n        return behavior.cleanupAfterLoop && cleanupActions ? () => {\n            for (let action of cleanupActions) {\n                action();\n            }\n            cleanupActions.length = 0;\n        } : () => {};\n    }\n\n    private getSteps(filter: ScriptFilter) {\n        const scripts = filterScripts(this.scripts, filter);\n        const steps: ExecutionStep[] = [];\n        scripts.forEach(script => this.scriptMap.get(script)?.forEach(step => steps.push(step)));\n        return steps;\n    }\n\n    runByName(name: string): () => void {\n        const context: Context = this.createContext();\n        execute(this.getSteps({ name }), undefined, context);\n        return () => context.cleanupActions?.forEach(action => action());\n    }\n\n    runByTags(tags: Tag[]): () => void {\n        const context: Context = this.createContext();\n        execute(this.getSteps({ tags }), undefined, context);\n        return () => context.cleanupActions?.forEach(action => action());\n    }\n\n    private loopWithFilter(filter: ScriptFilter, behavior: LoopBehavior = {}): () => void {\n        const context: Context = this.createContext();\n        const parameters: ExecutionParameters = { time: 0 };\n        const steps = this.getSteps(filter);\n        const loopCleanup = this.createLoopCleanup(behavior, context);\n        const loop = (time: number) => {\n            parameters.time = time;\n            execute(steps, parameters, context);\n            loopCleanup();\n            animationFrameId = requestAnimationFrame(loop);\n        };\n        let animationFrameId = requestAnimationFrame(loop);\n        return () => {\n            loopCleanup();\n            cancelAnimationFrame(animationFrameId);\n        }\n    }\n    \n    loopByName(name: string, behavior: LoopBehavior = {}): () => void {\n        return this.loopWithFilter({ name }, behavior);\n    }\n\n    loopByTags(tags: string[], behavior: LoopBehavior = {}) {\n        return this.loopWithFilter({ tags }, behavior);\n    }\n}"],"names":["ConvertBehavior","DEFAULT_EXTERNALS","log","console","execute","steps","parameters","context","changedParameters","length","push","_iterator","_createForOfIteratorHelperLoose","_step","done","step","value","pop","filterScripts","scripts","filter","_ref","name","tags","namesToFilter","undefined","Array","isArray","indexOf","_filter$tags","every","tag","some","t","convertActionsProperty","action","results","getSteps","external","actionConvertorMap","_action$actions","actions","forEach","convertAction","hasFormula","resolution","isFormula","item","Object","values","formula","charAt","calculateEvaluator","evaluator","defaultValue","scope","_context$parameters","_evaluator$evaluate","evaluate","e","error","getFormulaEvaluator","Error","mathEvaluator","math","substring","compile","calculateBoolean","valueOf","convertConditionProperty","actionConversionMap","condition","SKIP_REMAINING","subAction","_objectWithoutPropertiesLoose","_excluded","conditionResolution","subStepResults","calculateArray","map","calculateResolution","evalItem","calculateNumber","calculateTypedArray","ArrayConstructor","defaultNumberValue","Float32Array","Int8Array","Uint8Array","Int16Array","Uint16Array","Int32Array","Uint32Array","array","compiledArray","i","bufferArray","set","BYTES_PER_ELEMENT","calculateMap","evaluatorEntries","entries","key","fromEntries","_ref2","typeArrayResolution","convertLogProperty","_","messages","resolutions","m","_external","apply","r","convertLoopProperty","stepResults","DEFAULT_CONVERTORS","loop","loopResolution","numLoops","index","convertParametersProperty","paramResolutions","paramEntries","paramValues","_context$objectPool$p","_context$objectPool","objectPool","k","entry","_context$objectPool2","convertScriptProperty","script","_action$scriptTags","scriptTags","convertor","convertScripts","scriptMap","Map","filteredScripts","_scriptMap$get","get","has","scriptSteps","_scriptMap$get2","executeScript","scriptName","cleanupActions","find","calculateString","ScriptProcessor","_proto","prototype","createContext","createLoopCleanup","behavior","cleanupAfterLoop","_this$scriptMap$get","_this","runByName","_context$cleanupActio","runByTags","_context$cleanupActio2","loopWithFilter","time","loopCleanup","animationFrameId","requestAnimationFrame","cancelAnimationFrame","loopByName","loopByTags"],"mappings":"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"}