{"version":3,"file":"index.modern.js","sources":["../src/core/convertor/Convertor.ts","../src/core/execution/ExecutionStep.ts","../src/core/resolutions/calculateEvaluator.ts","../src/core/resolutions/calculateNumber.ts","../src/core/resolutions/TypedArrayResolution.ts","../src/core/resolutions/calculateArray.ts","../src/core/resolutions/calculate.ts","../src/core/resolutions/StringResolution.ts","../src/core/scripts/Script.ts"],"sourcesContent":["import { DokAction } from \"../actions/Action\";\nimport { ExecutionStep } from \"../execution/ExecutionStep\";\nimport { ActionConversionMap } from \"./convert-action\";\n\nexport enum ConvertBehavior {\n    NONE,\n    SKIP_REMAINING,\n}\n\nexport type Convertor = (action: DokAction, results: ExecutionStep[], getSteps: (name?: string) => ExecutionStep[], external?: Record<string, any>, actionConversionMap?: ActionConversionMap) => ConvertBehavior | void;\n\nexport const DEFAULT_EXTERNALS = {\n    log: console.log,\n};\n","import { Context } from \"../context/Context\";\nimport { SupportedTypes } from \"../resolutions/calculate\";\n\nexport type ExecutionStep = (context: Context, parameters: Record<string, SupportedTypes | undefined>) => void;\n\nexport function execute(steps: ExecutionStep[], parameters: Record<string, SupportedTypes | undefined> = {}, context: Context = {}) {\n    for (let step of steps) {\n        step(context, parameters);\n    }\n}\n","import * as math from \"mathjs\";\nimport { Context } from \"../context/Context\";\nimport { Expression, Formula } from \"./Formula\";\nimport { Resolution } from \"./Resolution\";\n\nexport function hasFormula(resolution: Resolution): boolean {\n    if (isFormula(resolution)) {\n        return true;\n    }\n    if (Array.isArray(resolution)) {\n        return resolution.some(item => !hasFormula(item));\n    }\n    return false;\n}\n\nexport function isFormula(value: Formula | Expression | any) {\n    if (!value) {\n        return false;\n    }\n    if (typeof(value) !== \"string\" && typeof(value) !== \"object\") {\n        return false;\n    }\n    const formula = typeof(value) === \"string\" ? value : value.formula;\n    return formula?.charAt(0) === \"{\" && formula?.charAt(formula.length-1) === \"}\";\n}\n\nexport function calculateEvaluator<T>(evaluator: math.EvalFunction, context: Context | undefined, formula: Formula | Expression, defaultValue: T): T {\n    const scope = context?.parameters?.[context.parameters.length - 1];\n    try {\n        return evaluator.evaluate(scope ?? {}) ?? defaultValue;\n    } catch (e) {\n        console.error(\"Error: \" + e + \" on formula: \" + formula + \", scope: \", scope);\n    }\n    return defaultValue;\n}\n\nexport function getFormulaEvaluator(value: Formula | Expression): math.EvalFunction {\n    if (!isFormula(value)) {\n        throw new Error(`Formula: ${value} must start and end with brackets.`);\n    }\n    const formula = typeof(value) === \"string\" ? value : value.formula;\n    const mathEvaluator = math.parse(formula.substring(1, formula.length - 1)).compile();\n    return mathEvaluator;\n}\n\n","import { ValueOf } from \"../types/ValueOf\";\nimport { Context } from \"../context/Context\";\nimport { calculateEvaluator, getFormulaEvaluator } from \"./calculateEvaluator\";\nimport { NumberResolution } from \"./NumberResolution\";\n\n\nexport function calculateNumber(value: NumberResolution, defaultValue = 0): ValueOf<number> {\n    if (typeof (value) === \"number\") {\n        return value;\n    }\n    if (value === undefined) {\n        return {\n            valueOf() {\n                return defaultValue;\n            }\n        };\n    }\n    const evaluator = getFormulaEvaluator(value);\n    return {\n        valueOf(context?: Context): number {\n            return calculateEvaluator<number>(evaluator, context, value, defaultValue);\n        }\n    };\n}\n","import { Context } from \"../context/Context\";\nimport { TypedArray } from \"../types/TypedArray\";\nimport { ValueOf } from \"../types/ValueOf\";\nimport { Expression, Formula } from \"./Formula\";\nimport { NumberResolution } from \"./NumberResolution\";\nimport { calculateNumber } from \"./calculateNumber\";\nimport { calculateEvaluator, getFormulaEvaluator } from \"./calculateEvaluator\";\n\nexport type TypedArrayResolution = TypedArray | NumberResolution[] | Formula | Expression;\n\ninterface TypedArrayConstructor {\n    new (size: number): TypedArray;\n    BYTES_PER_ELEMENT: number;\n}\n\nexport function calculateTypedArray(value: TypedArrayResolution, ArrayConstructor: TypedArrayConstructor = Float32Array, defaultNumberValue = 0): ValueOf<TypedArray> {\n    if (value instanceof Float32Array || value instanceof Int8Array || value instanceof Uint8Array\n        || value instanceof Int16Array || value instanceof Uint16Array\n        || value instanceof Int32Array || value instanceof Uint32Array) {\n        return value;\n    }\n    if (Array.isArray(value)) {\n        const array = new ArrayConstructor(value.length);\n        const compiledArray = value.map(value => calculateNumber(value, defaultNumberValue));\n        return {\n            valueOf(context?: Context): TypedArray {\n                for (let i = 0; i < compiledArray.length; i++) {\n                    array[i] = compiledArray[i].valueOf(context);\n                }\n                return array;\n            }\n        };    \n    }\n    const formula = value;\n    const evaluator = getFormulaEvaluator(formula);\n    let bufferArray: TypedArray;\n    return {\n        valueOf(context?: Context): TypedArray {\n            const value = calculateEvaluator<TypedArray | undefined>(evaluator, context, formula, undefined);\n            if (value instanceof Float32Array || value instanceof Int8Array || value instanceof Uint8Array\n                || value instanceof Int16Array || value instanceof Uint16Array\n                || value instanceof Int32Array || value instanceof Uint32Array) {\n                return value;\n            }\n            if (typeof(value) === \"number\") {\n                if (!bufferArray) {\n                    bufferArray = new ArrayConstructor(value / ArrayConstructor.BYTES_PER_ELEMENT);\n                }\n                return bufferArray;\n            }\n            throw new Error(`Formula ${formula} doesnt't evaluate to a TypedArray.`);\n        }\n    };\n}","import { Context } from \"../context/Context\";\nimport { ValueOf } from \"../types/ValueOf\";\nimport { ArrayResolution } from \"./ArrayResolution\";\nimport { SupportedTypes, calculateResolution } from \"./calculate\";\nimport { hasFormula } from \"./calculateEvaluator\";\n\nexport function calculateArray(value: ArrayResolution): ValueOf<SupportedTypes> {\n    //  check if we have any resolution to perform\n    if (!hasFormula(value)) {\n        if (typeof(value) === \"object\") {\n            throw new Error(\"value can't be an object.\");\n        }\n        return value;\n    }\n    const evaluator = value.map(resolution => calculateResolution(resolution));\n\n    return {\n        valueOf(context?: Context): SupportedTypes {\n            const value = evaluator.map(evalItem => evalItem.valueOf(context));\n            return value;\n        }\n    };\n}","import { Context } from \"../context/Context\";\nimport { TypedArray } from \"../types/TypedArray\";\nimport { ValueOf } from \"../types/ValueOf\";\nimport { ArrayResolution } from \"./ArrayResolution\";\nimport { Resolution } from \"./Resolution\";\nimport { calculateTypedArray } from \"./TypedArrayResolution\";\nimport { calculateArray } from \"./calculateArray\";\nimport { calculateEvaluator, getFormulaEvaluator, hasFormula } from \"./calculateEvaluator\";\n\nexport function calculateResolution(value: Resolution): ValueOf<SupportedTypes> {\n    if (value === undefined) {\n        return {\n            valueOf() {\n                return undefined;\n            }\n        };\n    }\n    if (value instanceof Float32Array || value instanceof Int8Array || value instanceof Uint8Array\n        || value instanceof Int16Array || value instanceof Uint16Array\n        || value instanceof Int32Array || value instanceof Uint32Array) {\n        return value;\n    }\n    if (typeof(value) === \"number\") {\n        return value;\n    }\n    if (Array.isArray(value)) {\n        if (hasFormula(value)) {\n            return calculateArray(value);\n        }\n        const typeArrayResolution = value as Exclude<typeof value, ArrayResolution>;\n        return calculateTypedArray(typeArrayResolution);\n    }\n    if (typeof(value) === \"string\" && (value.charAt(0) !== \"{\" || value.charAt(value.length-1) !== \"}\")) {\n        return value;\n    }\n    if (Array.isArray(value)) {\n        return calculateArray(value);\n    }\n    const evaluator = getFormulaEvaluator(value);\n    return {\n        valueOf(context?: Context): string | number | undefined {\n            return calculateEvaluator<string | number | undefined>(evaluator, context, value, undefined);\n        }\n    };\n}\n\n\nexport type SupportedTypes = undefined | string | number | TypedArray | boolean | SupportedTypes[];\n","import { Context } from \"../context/Context\";\nimport { ValueOf } from \"../types/ValueOf\";\nimport { Expression, Formula } from \"./Formula\";\nimport { calculateEvaluator, getFormulaEvaluator, isFormula } from \"./calculateEvaluator\";\n\nexport type StringResolution = string | Formula | Expression | undefined;\n\nexport function calculateString(value: StringResolution, defaultValue = \"\"): ValueOf<string> {\n    if (typeof(value) === \"string\" && !isFormula(value)) {\n        return value;\n    }\n    if (value === undefined) {\n        return {\n            valueOf() {\n                return defaultValue;\n            }\n        };\n    }\n    const evaluator = getFormulaEvaluator(value);\n    return {\n        valueOf(context?: Context): string {\n            return calculateEvaluator<string>(evaluator, context, value, defaultValue);\n        }\n    };\n\n}\n","import { DokAction } from \"../actions/Action\";\nimport { Resolution } from \"../resolutions/Resolution\";\n\nexport type Tag = string|[string, string|number|boolean];\n\nexport interface Script {\n    name: string;\n    parameters?: (string|[string, Resolution])[];\n    actions: DokAction[];\n    tags?: Tag[];\n}\n\nexport function getByTags(scripts: Script[], tags: Tag[]): Script[] {\n    return scripts.filter(script => {\n        return tags.every(tag => {\n            if (typeof(tag) === \"string\") {\n                return script.tags?.some((t) => t === tag || (Array.isArray(t) && t[0] === tag))\n            } else {\n                return script.tags?.some((t) => Array.isArray(t) && t[0] === tag[0] && t[1] === tag[1]);\n            }\n        });\n    });\n}\n\nexport function getScriptNamesByTags(scripts: Script[], tags: Tag[]): string[] {\n    return getByTags(scripts, tags).map(({ name }) => name);\n}\n\nexport function getByName(scripts: Script[], name: string | string[]): Script[] {\n    return scripts.filter(script => name.includes(script.name));\n}"],"names":["ConvertBehavior","DEFAULT_EXTERNALS","log","console","execute","steps","parameters","context","_iterator","_createForOfIteratorHelperLoose","_step","done","step","value","hasFormula","resolution","isFormula","Array","isArray","some","item","formula","charAt","length","calculateEvaluator","evaluator","defaultValue","scope","_context$parameters","_evaluator$evaluate","evaluate","e","error","getFormulaEvaluator","Error","mathEvaluator","math","substring","compile","calculateNumber","undefined","valueOf","calculateTypedArray","ArrayConstructor","defaultNumberValue","Float32Array","Int8Array","Uint8Array","Int16Array","Uint16Array","Int32Array","Uint32Array","array","compiledArray","map","i","bufferArray","BYTES_PER_ELEMENT","calculateArray","calculateResolution","evalItem","typeArrayResolution","calculateString","getByTags","scripts","tags","filter","script","every","tag","_script$tags","t","_script$tags2","getScriptNamesByTags","_ref","name","getByName","includes"],"mappings":"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"}